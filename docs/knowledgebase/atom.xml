<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://clickhouse.com/docs/knowledgebase</id>
    <title>ClickHouse Knowledge Base Feed</title>
    <updated>2023-03-22T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://clickhouse.com/docs/knowledgebase"/>
    <subtitle>Feed of articles posted to the ClickHouse Knowledge Base</subtitle>
    <icon>https://clickhouse.com/docs/img/favicon.ico</icon>
    <rights>Copyright &amp;copy; 2016&amp;ndash;2023 ClickHouse, Inc. ClickHouse Docs provided under the Creative Commons CC BY-NC-SA 4.0 license. ClickHouse&amp;reg; is a registered trademark of ClickHouse, Inc.</rights>
    <entry>
        <title type="html"><![CDATA[How do I export data from ClickHouse to a file?]]></title>
        <id>https://clickhouse.com/docs/knowledgebase/en/faq/integration/file-export</id>
        <link href="https://clickhouse.com/docs/knowledgebase/en/faq/integration/file-export"/>
        <updated>2023-03-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Using INTO OUTFILE Clause]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-into-outfile-clause">Using INTO OUTFILE Clause<a href="#using-into-outfile-clause" class="hash-link" aria-label="Direct link to Using INTO OUTFILE Clause" title="Direct link to Using INTO OUTFILE Clause">​</a></h2><p>Add an <a href="https://clickhouse.com/docs/en/sql-reference/statements/select/into-outfile.md" target="_blank" rel="noopener noreferrer">INTO OUTFILE</a> clause to your query.</p><p>For example:</p><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">INTO</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">OUTFILE</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'file'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>By default, ClickHouse uses the file extension of the filename to deteremine the output format and compression. For example, all of the rows in <code>nyc_taxi</code> will be exported to the <code>nyc_taxi.parquet</code> using the Parquet format:</p><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> nyc_taxi</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">INTO</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">OUTFILE</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'taxi_rides.parquet'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>And the following file will be a compressed, tab-separated file:</p><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> nyc_taxi</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">INTO</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">OUTFILE</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'taxi_rides.tsv.gz'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>If ClickHouse can not determine the format from the file extension, then the output format defaults to <a href="https://clickhouse.com/docs/en/interfaces/formats.md" target="_blank" rel="noopener noreferrer">TabSeparated</a> for output data. To specify the <a href="https://clickhouse.com/docs/en/interfaces/formats.md" target="_blank" rel="noopener noreferrer">output format</a>, use the <a href="https://clickhouse.com/docs/en/sql-reference/statements/select/format.md" target="_blank" rel="noopener noreferrer">FORMAT clause</a>.</p><p>For example:</p><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> nyc_taxi</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">INTO</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">OUTFILE</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'taxi_rides.txt'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FORMAT CSV</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-a-file-engine-table">Using a File-Engine Table<a href="#using-a-file-engine-table" class="hash-link" aria-label="Direct link to Using a File-Engine Table" title="Direct link to Using a File-Engine Table">​</a></h2><p>Another option is to use the <a href="https://clickhouse.com/docs/en/engines/table-engines/special/file.md" target="_blank" rel="noopener noreferrer">File</a> table engine, where ClickHouse uses the file to store the data. You can perform queries and inserts directly on the file.</p><p>For example:</p><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">TABLE</span><span class="token plain"> my_table </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">   x UInt32</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">   y String</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">   z </span><span class="token keyword" style="color:rgb(86, 156, 214)">DateTime</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">ENGINE</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">File</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">Parquet</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Insert a few rows:</p><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">INSERT</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">INTO</span><span class="token plain"> my_table </span><span class="token keyword" style="color:rgb(86, 156, 214)">VALUES</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">   </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'Hello'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">now</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">   </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'World'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">now</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">   </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">3</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'Goodbye'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">now</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The file is stored in the <code>data</code> folder of your ClickHouse server - specifically in <code>/data/default/my_table</code> in a file named <code>data.Parquet</code>.</p><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_WoCw"><div class="alert-icon admonitionIcon_Ibzs"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></div><div class="alert-content admonitionContent_vXIg"><div class="admonitionHeading_TMsN">note</div><p>Using the <code>File</code> table engine is incredibly handy for creating and querying files on your file system, but keep in mind that <code>File</code> tables are not <code>MergeTree</code> tables, so you don't get all the benefits that come with <code>MergeTree</code>. Use <code>File</code> for convenience when exporting data out of ClickHouse in convenient formats.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-command-line-redirection">Using Command-Line Redirection<a href="#using-command-line-redirection" class="hash-link" aria-label="Direct link to Using Command-Line Redirection" title="Direct link to Using Command-Line Redirection">​</a></h2><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">$ clickhouse-client --query </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT * from table"</span><span class="token plain"> --format FormatName </span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> result.txt</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>See <a href="https://clickhouse.com/docs/en/interfaces/cli.md" target="_blank" rel="noopener noreferrer">clickhouse-client</a>.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to ingest Parquet files from an S3 bucket]]></title>
        <id>https://clickhouse.com/docs/knowledgebase/ingest-parquet-files-in-s3</id>
        <link href="https://clickhouse.com/docs/knowledgebase/ingest-parquet-files-in-s3"/>
        <updated>2023-03-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Below are some basics of using the S3 table engine to read parquet files.]]></summary>
        <content type="html"><![CDATA[<p>Below are some basics of using the S3 table engine to read parquet files.</p><ul><li><p>create access and secret keys for an IAM service user.
normal login users usually don't work since they may have been configured with an MFA policy.</p></li><li><p>set the permissions on the policy to allow the service user to access the bucket and folders.</p></li></ul><p>The following is a very simple example that you can use to test the mechanics of accessing your parquet files successfully prior to applying to your actual data.</p><p>If you need an example of creating a user and bucket, you can follow the first two sections (create user and create bucket):
<a href="https://clickhouse.com/docs/en/guides/sre/configuring-s3-for-clickhouse-use/" target="_blank" rel="noopener noreferrer">https://clickhouse.com/docs/en/guides/sre/configuring-s3-for-clickhouse-use/</a></p><p>I used this sample file: <a href="https://github.com/Teradata/kylo/tree/master/samples/sample-data/parquet" target="_blank" rel="noopener noreferrer">https://github.com/Teradata/kylo/tree/master/samples/sample-data/parquet</a>
and uploaded it to my test bucket</p><p>You can set the policy something like this on the bucket:
(adjust as needed, this one is fairly open for privileges but will help in testing. you can narrow your permissions as necessary)</p><div class="codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">{</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    "Version": "2012-10-17",</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    "Id": "Policy123456",</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    "Statement": [</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            "Sid": "abc123",</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            "Effect": "Allow",</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            "Principal": {</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                "AWS": [</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                    "arn:aws:iam::1234567890:user/mars-s3-user"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                ]</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            },</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            "Action": "s3:*",</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            "Resource": [</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                "arn:aws:s3:::mars-doc-test",</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">                "arn:aws:s3:::mars-doc-test/*"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            ]</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    ]</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can run queries with this type of syntax using the S3 table engine:
<a href="https://clickhouse.com/docs/en/sql-reference/table-functions/s3/" target="_blank" rel="noopener noreferrer">https://clickhouse.com/docs/en/sql-reference/table-functions/s3/</a></p><div class="codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">clickhouse-cloud :)  select count(*) from s3('https://mars-doc-test.s3.amazonaws.com/s3-parquet-test/userdata1.parquet','ABC123', 'abc+123', 'Parquet', 'first_name String');</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">SELECT count(*)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM s3('https://mars-doc-test.s3.amazonaws.com/s3-parquet-test/userdata1.parquet', 'ABC123', 'abc+123', 'Parquet', 'first_name String')</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Query id: fd4f1193-d604-4ac0-9a46-bdd2d5e14727</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌─count()─┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│    1000 │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└─────────┘</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">1 row in set. Elapsed: 1.274 sec. Processed 1.00 thousand rows, 14.64 KB (784.81 rows/s., 11.49 KB/s.)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The data types reference for parquet format are here:
<a href="https://clickhouse.com/docs/en/interfaces/formats/#data-format-parquet" target="_blank" rel="noopener noreferrer">https://clickhouse.com/docs/en/interfaces/formats/#data-format-parquet</a></p><p>To bring in the data into a native ClickHouse table:</p><p>create the table, something like this (just chose a couple of the columns in the parquet file):</p><div class="codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">clickhouse-cloud :) CREATE TABLE my_parquet_table (id UInt64, first_name String) ENGINE = MergeTree ORDER BY id;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">CREATE TABLE my_parquet_table</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    `id` UInt64,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    `first_name` String</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">ENGINE = MergeTree</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">ORDER BY id</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Query id: 412e3994-bf8e-444e-ac43-a7c82642b7da</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Ok.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">0 rows in set. Elapsed: 0.600 sec.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Select the data from the S3 bucket to insert into the new table:</p><div class="codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">clickhouse-cloud :) INSERT INTO my_parquet_table (id, first_name) SELECT id, first_name FROM s3('https://mars-doc-test.s3.amazonaws.com/s3-parquet-test/userdata1.parquet', 'ABC123','abc+123', 'Parquet', 'id UInt64, first_name String') FORMAT Parquet</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">INSERT INTO my_parquet_table (id, first_name) SELECT</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    id,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    first_name</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM s3('https://mars-doc-test.s3.amazonaws.com/s3-parquet-test/userdata1.parquet', 'ABC123', 'abc+123', 'Parquet', 'id UInt64, first_name String')</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Query id: c3cdc871-f338-462d-8797-6751b45a0b58</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Ok.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">0 rows in set. Elapsed: 1.220 sec. Processed 1.00 thousand rows, 22.64 KB (819.61 rows/s., 18.56 KB/s.)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Verify the import:</p><div class="codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">clickhouse-cloud :) SELECT * FROM my_parquet_table LIMIT 10;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">SELECT *</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM my_parquet_table</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">LIMIT 10</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Query id: 1ccf59dd-d804-46a9-aadd-ed5c57b9e1a0</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌─id─┬─first_name─┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│  1 │ Amanda     │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│  2 │ Albert     │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│  3 │ Evelyn     │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│  4 │ Denise     │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│  5 │ Carlos     │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│  6 │ Kathryn    │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│  7 │ Samuel     │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│  8 │ Harry      │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│  9 │ Jose       │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ 10 │ Emily      │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└────┴────────────┘</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>When you are ready to import your real data, you can use some special syntax like wildcards and ranges to specify your folders, subfolders and files in your bucket.
I'd recommend to filter a few directories and files to test the import, maybe a certain year, a couple months and some date range to test first.</p><p>besides the path options here, newly released is syntax <code>**</code> which specifies all subdirectories recursively.
<a href="https://clickhouse.com/docs/en/sql-reference/table-functions/s3/" target="_blank" rel="noopener noreferrer">https://clickhouse.com/docs/en/sql-reference/table-functions/s3/</a></p><p>For example, assuming the paths and bucket structure is something like this:
<code>https://your_s3_bucket.s3.amazonaws.com/&lt;your_folder&gt;/&lt;year&gt;/&lt;month&gt;/&lt;day&gt;/&lt;filename&gt;.parquet</code>
<code>https://mars-doc-test.s3.amazonaws.com/system_logs/2022/11/01/my-app-logs-0001.parquet</code></p><p>This would get all files for 1st day of every month in 2021-2022
<code>https://mars-doc-test.s3.amazonaws.com/system_logs/{2021-2022}/**/01/*.parquet</code></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Converting Files from Parquet to CSV or JSON]]></title>
        <id>https://clickhouse.com/docs/knowledgebase/parquet-to-csv-json</id>
        <link href="https://clickhouse.com/docs/knowledgebase/parquet-to-csv-json"/>
        <updated>2023-03-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[You can use clickhouse-local to convert files between any of the input and output formats that ClickHouse supports (which is over 70 different formats!). In this article, we are convert a Parquet file in S3 into a CSV and JSON file.]]></summary>
        <content type="html"><![CDATA[<p>You can use <code>clickhouse-local</code> to convert files between any of the <a href="https://clickhouse.com/docs/en/interfaces/formats" target="_blank" rel="noopener noreferrer">input and output formats</a> that ClickHouse supports (which is over 70 different formats!). In this article, we are convert a Parquet file in S3 into a CSV and JSON file.</p><p>Let's start at the beginning. ClickHouse has a collection of <a href="https://clickhouse.com/docs/en/sql-reference/table-functions/" target="_blank" rel="noopener noreferrer">table functions</a> that read from files, databases and other resoures and converts the data to a table. To demonstrate, suppose we have a Parquet file in S3. We will use the <code>s3</code> table function to read it (ClickHouse knows it's a Parquet file based on the filename).</p><p>But first, let's download the <code>clickhouse</code> binary:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token function" style="color:rgb(220, 220, 170)">curl</span><span class="token plain"> https://clickhouse.com/ </span><span class="token operator" style="color:rgb(212, 212, 212)">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="accessing-the-data-using-a-table-function">Accessing the data using a table function<a href="#accessing-the-data-using-a-table-function" class="hash-link" aria-label="Direct link to Accessing the data using a table function" title="Direct link to Accessing the data using a table function">​</a></h2><p>Let's verify we can read the file by using <code>DESCRIBE</code> on the resulting table that the <code>s3</code> table function creates:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">./clickhouse </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">local</span><span class="token plain"> -q </span><span class="token string" style="color:rgb(206, 145, 120)">"DESCRIBE s3('https://datasets-documentation.s3.eu-west-3.amazonaws.com/house_parquet/house_0.parquet')"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>This particular file contains home prices of properties sold in the United Kingdom. The response looks like:</p><div class="language-response codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-response codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">price   Nullable(Int64)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">date    Nullable(UInt16)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">postcode1   Nullable(String)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">postcode2   Nullable(String)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">type    Nullable(String)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">is_new  Nullable(UInt8)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">duration    Nullable(String)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">addr1   Nullable(String)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">addr2   Nullable(String)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">street  Nullable(String)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">locality    Nullable(String)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">town    Nullable(String)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">district    Nullable(String)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">county  Nullable(String)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>You can run any query you want on the data. For example, let's see which towns have the highest average price of homes:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">./clickhouse </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">local</span><span class="token plain"> -q </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">   town,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">   avg(price) AS avg_price</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">FROM s3('https://datasets-documentation.s3.eu-west-3.amazonaws.com/house_parquet/house_0.parquet')</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">GROUP BY town</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">ORDER BY avg_price DESC</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">LIMIT 10"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The response looks like:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">GATWICK </span><span class="token number" style="color:rgb(181, 206, 168)">16818750</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">CHALFONT ST GILES   </span><span class="token number" style="color:rgb(181, 206, 168)">938090.0985915493</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">VIRGINIA WATER  </span><span class="token number" style="color:rgb(181, 206, 168)">789301.1320224719</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">COBHAM  </span><span class="token number" style="color:rgb(181, 206, 168)">699874.7111622555</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">BEACONSFIELD    </span><span class="token number" style="color:rgb(181, 206, 168)">677247.5483146068</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">ESHER   </span><span class="token number" style="color:rgb(181, 206, 168)">616004.6888297872</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">KESTON  </span><span class="token number" style="color:rgb(181, 206, 168)">607585.8597560975</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">GERRARDS CROSS  </span><span class="token number" style="color:rgb(181, 206, 168)">566330.2959086584</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">ASCOT   </span><span class="token number" style="color:rgb(181, 206, 168)">551491.2975753123</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">WEYBRIDGE   </span><span class="token number" style="color:rgb(181, 206, 168)">548974.828692494</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="convert-the-parquet-file-to-a-csv">Convert the Parquet file to a CSV<a href="#convert-the-parquet-file-to-a-csv" class="hash-link" aria-label="Direct link to Convert the Parquet file to a CSV" title="Direct link to Convert the Parquet file to a CSV">​</a></h2><p>You can send the result of any SQL query to a file. Let's grab all the columns from our Parquet file in S3 and send the output to a new CSV file. Because the output file ends in <code>.csv</code>, ClickHouse knows to use the <code>CSV</code> output format:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">./clickhouse </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">local</span><span class="token plain"> -q </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT *</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">FROM s3('https://datasets-documentation.s3.eu-west-3.amazonaws.com/house_parquet/house_0.parquet')</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">INTO OUTFILE 'house_prices.csv'"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Let's verify it worked:</p><div class="language-response codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-response codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">$ tail house_prices.csv</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">70000,10508,"YO8","9XN","detached",0,"freehold","7","","POPPY CLOSE","SELBY","SELBY","SELBY","NORTH YORKSHIRE"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">130000,14274,"YO8","9XP","detached",0,"freehold","10","","HEATHER CLOSE","","SELBY","SELBY","NORTH YORKSHIRE"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">150000,18180,"YO8","9XP","detached",0,"freehold","11","","HEATHER CLOSE","","SELBY","SELBY","NORTH YORKSHIRE"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">157000,18088,"YO8","9XP","detached",0,"freehold","12","","HEATHER CLOSE","","SELBY","SELBY","NORTH YORKSHIRE"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">134000,17333,"YO8","9XP","semi-detached",0,"freehold","16","","HEATHER CLOSE","","SELBY","SELBY","NORTH YORKSHIRE"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">250000,13405,"YO8","9YA","detached",0,"freehold","6","","YORKDALE COURT","HAMBLETON","SELBY","SELBY","NORTH YORKSHIRE"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">59500,11166,"YO8","9YB","semi-detached",0,"freehold","4","","YORKDALE DRIVE","HAMBLETON","SELBY","SELBY","NORTH YORKSHIRE"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">142500,17648,"YO8","9YB","semi-detached",0,"freehold","4A","","YORKDALE DRIVE","HAMBLETON","SELBY","SELBY","NORTH YORKSHIRE"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">230000,15125,"YO8","9YD","detached",0,"freehold","1","","ONE ACRE GARTH","HAMBLETON","SELBY","SELBY","NORTH YORKSHIRE"</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">250000,15950,"YO8","9YD","detached",0,"freehold","3","","ONE ACRE GARTH","HAMBLETON","SELBY","SELBY","NORTH YORKSHIRE"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="convert-the-parquet-file-to-a-json">Convert the Parquet file to a JSON<a href="#convert-the-parquet-file-to-a-json" class="hash-link" aria-label="Direct link to Convert the Parquet file to a JSON" title="Direct link to Convert the Parquet file to a JSON">​</a></h2><p>To convert the Parquet file to JSON, simply change the extension on the output filename:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">./clickhouse </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">local</span><span class="token plain"> -q </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT *</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">FROM s3('https://datasets-documentation.s3.eu-west-3.amazonaws.com/house_parquet/house_0.parquet')</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">INTO OUTFILE 'house_prices.ndjson'"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Let's verify it worked:</p><div class="language-response codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-response codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain"> $ tail house_prices.ndjson</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">{"price":"70000","date":10508,"postcode1":"YO8","postcode2":"9XN","type":"detached","is_new":0,"duration":"freehold","addr1":"7","addr2":"","street":"POPPY CLOSE","locality":"SELBY","town":"SELBY","district":"SELBY","county":"NORTH YORKSHIRE"}</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">{"price":"130000","date":14274,"postcode1":"YO8","postcode2":"9XP","type":"detached","is_new":0,"duration":"freehold","addr1":"10","addr2":"","street":"HEATHER CLOSE","locality":"","town":"SELBY","district":"SELBY","county":"NORTH YORKSHIRE"}</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">{"price":"150000","date":18180,"postcode1":"YO8","postcode2":"9XP","type":"detached","is_new":0,"duration":"freehold","addr1":"11","addr2":"","street":"HEATHER CLOSE","locality":"","town":"SELBY","district":"SELBY","county":"NORTH YORKSHIRE"}</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">{"price":"157000","date":18088,"postcode1":"YO8","postcode2":"9XP","type":"detached","is_new":0,"duration":"freehold","addr1":"12","addr2":"","street":"HEATHER CLOSE","locality":"","town":"SELBY","district":"SELBY","county":"NORTH YORKSHIRE"}</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">{"price":"134000","date":17333,"postcode1":"YO8","postcode2":"9XP","type":"semi-detached","is_new":0,"duration":"freehold","addr1":"16","addr2":"","street":"HEATHER CLOSE","locality":"","town":"SELBY","district":"SELBY","county":"NORTH YORKSHIRE"}</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">{"price":"250000","date":13405,"postcode1":"YO8","postcode2":"9YA","type":"detached","is_new":0,"duration":"freehold","addr1":"6","addr2":"","street":"YORKDALE COURT","locality":"HAMBLETON","town":"SELBY","district":"SELBY","county":"NORTH YORKSHIRE"}</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">{"price":"59500","date":11166,"postcode1":"YO8","postcode2":"9YB","type":"semi-detached","is_new":0,"duration":"freehold","addr1":"4","addr2":"","street":"YORKDALE DRIVE","locality":"HAMBLETON","town":"SELBY","district":"SELBY","county":"NORTH YORKSHIRE"}</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">{"price":"142500","date":17648,"postcode1":"YO8","postcode2":"9YB","type":"semi-detached","is_new":0,"duration":"freehold","addr1":"4A","addr2":"","street":"YORKDALE DRIVE","locality":"HAMBLETON","town":"SELBY","district":"SELBY","county":"NORTH YORKSHIRE"}</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">{"price":"230000","date":15125,"postcode1":"YO8","postcode2":"9YD","type":"detached","is_new":0,"duration":"freehold","addr1":"1","addr2":"","street":"ONE ACRE GARTH","locality":"HAMBLETON","town":"SELBY","district":"SELBY","county":"NORTH YORKSHIRE"}</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">{"price":"250000","date":15950,"postcode1":"YO8","postcode2":"9YD","type":"detached","is_new":0,"duration":"freehold","addr1":"3","addr2":"","street":"ONE ACRE GARTH","locality":"HAMBLETON","town":"SELBY","district":"SELBY","county":"NORTH YORKSHIRE"}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="convert-csv-to-parquet">Convert CSV to Parquet<a href="#convert-csv-to-parquet" class="hash-link" aria-label="Direct link to Convert CSV to Parquet" title="Direct link to Convert CSV to Parquet">​</a></h2><p>It works both ways - we can easily read in the new CSV file and output it into a Parquet file. The local file <code>house_prices.csv</code> can be read in ClickHouse using the <code>file</code> table function, and ClickHouse outputs the file in Parquet format based on the filename ending in <code>.parquet</code> (or we could have added the <code>FORMAT Parquet</code> clause):</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">./clickhouse </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">local</span><span class="token plain"> -q </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT *</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">FROM file('house_prices.csv')</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">INTO OUTFILE 'house_prices.parquet'"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>As we mentioned above, you can use any of the ClickHouse <a href="https://clickhouse.com/docs/en/interfaces/formats" target="_blank" rel="noopener noreferrer">input and output formats</a> along with <code>clickhouse local</code> to easily convert files into different formats.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Export PostgreSQL data to Parquet, CSV or JSON]]></title>
        <id>https://clickhouse.com/docs/knowledgebase/postgresql-to-parquet-csv-json</id>
        <link href="https://clickhouse.com/docs/knowledgebase/postgresql-to-parquet-csv-json"/>
        <updated>2023-03-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[This one is easy with clickhouse-local:]]></summary>
        <content type="html"><![CDATA[<p>This one is easy with <code>clickhouse-local</code>:</p><ul><li>Use the <a href="https://clickhouse.com/docs/en/sql-reference/table-functions/postgresql" target="_blank" rel="noopener noreferrer"><code>postgresql</code> table function</a> to read the data</li><li>Use the <code>INTO OUTFILE _filename_ FORMAT</code> clause and specify the desired output format</li></ul><p>The output format can be any of the supported <a href="https://clickhouse.com/docs/en/interfaces/formats" target="_blank" rel="noopener noreferrer">ouput formats</a> in ClickHouse. Let's look at a few examples...</p><p>These examples use <code>clickhouse-local</code>, which is a part of the ClickHouse binary. Download it using the following:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token function" style="color:rgb(220, 220, 170)">curl</span><span class="token plain"> https://clickhouse.com/ </span><span class="token operator" style="color:rgb(212, 212, 212)">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="export-postgresql-to-parquet">Export PostgreSQL to Parquet<a href="#export-postgresql-to-parquet" class="hash-link" aria-label="Direct link to Export PostgreSQL to Parquet" title="Direct link to Export PostgreSQL to Parquet">​</a></h2><p>The <code>postgresql</code> table function allows <code>SELECT</code> (and <code>INSERT</code>) queries to be performed on data that is stored on a remote PostgreSQL server. For example, to view the entire contents of a table in PostgreSQL:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">SELECT *</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">   postgresql</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">'localhost:5432'</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">'postgres_database'</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">'postgres_table'</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">'user'</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">'password'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We can pipe the output of this query to a file using <code>INTO OUTFILE</code>. Use <code>FORMAT</code> to specify the format of the file to be created. Let's grab the entire contents of the PostgreSQL table, and send its contents to a Parquet file:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">./clickhouse </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">local</span><span class="token plain"> -q </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT * FROM</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">   postgresql(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'localhost:5432',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'postgres_database',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'postgres_table',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'user',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'password'</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">INTO OUTFILE 'my_output_file.parquet'"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_WoCw"><div class="alert-icon admonitionIcon_Ibzs"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></div><div class="alert-content admonitionContent_vXIg"><div class="admonitionHeading_TMsN">note</div><p>Because the name of the output file has a <code>.parquet</code> extension, ClickHouse assumes we want the Parquet format, so notice we omitted the <code>FORMAT Parquet</code> clause.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="export-postgresql-to-csv">Export PostgreSQL to CSV<a href="#export-postgresql-to-csv" class="hash-link" aria-label="Direct link to Export PostgreSQL to CSV" title="Direct link to Export PostgreSQL to CSV">​</a></h2><p>It's the same as for Parquet, except we specify a more approriate filename for the output:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">./clickhouse </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">local</span><span class="token plain"> -q </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT * FROM</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">   postgresql(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'localhost:5432',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'postgres_database',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'postgres_table',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'user',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'password'</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">INTO OUTFILE 'my_output_file.csv'"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>That's it! ClickHouse sees the <code>.csv</code> extension on the output file name and outputs the data as comma-separated. Otherwise, it's the exact same command as above.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="export-postgresql-to-json">Export PostgreSQL to JSON<a href="#export-postgresql-to-json" class="hash-link" aria-label="Direct link to Export PostgreSQL to JSON" title="Direct link to Export PostgreSQL to JSON">​</a></h2><p>To go from PostgreSQL to JSON, we just change the filename and ClickHouse will figure out the format:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">./clickhouse </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">local</span><span class="token plain"> -q </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT * FROM</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">   postgresql(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'localhost:5432',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'postgres_database',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'postgres_table',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'user',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'password'</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">INTO OUTFILE 'my_output_file.ndjson'"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_WoCw"><div class="alert-icon admonitionIcon_Ibzs"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></div><div class="alert-content admonitionContent_vXIg"><div class="admonitionHeading_TMsN">note</div><p>You don't have to stop here - you can use <code>clickhouse-local</code> to pull data from PostgreSQL and send it to <a href="https://clickhouse.com/docs/en/sql-reference/formats/" target="_blank" rel="noopener noreferrer">all types of output formats</a>.</p><p>If ClickHouse can not determine the output type by the filename extension, or if you want to specifically choose a format, add the <code>FOMRAT</code> clause:</p><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token identifier punctuation" style="color:rgb(212, 212, 212)">`</span><span class="token identifier punctuation" style="color:rgb(212, 212, 212)">`</span><span class="token punctuation" style="color:rgb(212, 212, 212)">`</span><span class="token plain">bash</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain">clickhouse </span><span class="token keyword" style="color:rgb(86, 156, 214)">local</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain">q </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT * FROM</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">   postgresql(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'localhost:5432',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'postgres_database',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'postgres_table',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'user',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'password'</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">INTO OUTFILE 'my_output_file.ndjson'</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">FORMAT JSONEachRow"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="stream-postgresql-to-another-process">Stream PostgreSQL to another process<a href="#stream-postgresql-to-another-process" class="hash-link" aria-label="Direct link to Stream PostgreSQL to another process" title="Direct link to Stream PostgreSQL to another process">​</a></h2><p>Instead of using <code>INTO OUTFILE</code>, you can stream the results of a table function to another process. Here's a simple example to demonstrate the syntax - we count the number of rows using the Linux <code>wc -l</code> command:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">./clickhouse </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">local</span><span class="token plain"> -q </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT *</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">FROM s3('https://datasets-documentation.s3.eu-west-3.amazonaws.com/house_parquet/house_0.parquet'</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">FORMAT JSONEachRow</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">)"</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">wc</span><span class="token plain"> -l</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>However, we could easily stream the rows to a shell script, Python script, or any other process that you want.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Export MySQL data to Parquet, CSV or JSON]]></title>
        <id>https://clickhouse.com/docs/knowledgebase/mysql-to-parquet-csv-json</id>
        <link href="https://clickhouse.com/docs/knowledgebase/mysql-to-parquet-csv-json"/>
        <updated>2023-03-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The clickhouse-local tool makes it quick and easy to read data from MySQL and output the data into lots of different formats, including Parquet, CSV, and JSON. We are going to:]]></summary>
        <content type="html"><![CDATA[<p>The <code>clickhouse-local</code> tool makes it quick and easy to read data from MySQL and output the data into lots of different formats, including Parquet, CSV, and JSON. We are going to:</p><ul><li>Use the <a href="https://clickhouse.com/docs/en/sql-reference/table-functions/mysql" target="_blank" rel="noopener noreferrer"><code>mysql</code> table function</a> to read the data</li><li>Use the <code>INTO OUTFILE _filename_ FORMAT</code> clause and specify the desired output format</li></ul><p>The <code>clickhouse-local</code> tool is a part of the ClickHouse binary. Download it using the following:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token function" style="color:rgb(220, 220, 170)">curl</span><span class="token plain"> https://clickhouse.com/ </span><span class="token operator" style="color:rgb(212, 212, 212)">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">sh</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="export-mysql-to-parquet">Export MySQL to Parquet<a href="#export-mysql-to-parquet" class="hash-link" aria-label="Direct link to Export MySQL to Parquet" title="Direct link to Export MySQL to Parquet">​</a></h2><p>The <code>mysql</code> table function creates a table based on the results of a query sent to a MySQL instance. For example:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">SELECT *</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">   mysql</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">'localhost:3306'</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">'my_sql_database'</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">'my_sql_table'</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">'user'</span><span class="token plain">,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token string" style="color:rgb(206, 145, 120)">'password'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>We can pipe the output of this query to a file using <code>INTO OUTFILE</code>. Use <code>FORMAT</code> to specify the format of the file to be created. Let's grab the entire contents of a MySQL table, and send its contents to a Parquet file:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">./clickhouse </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">local</span><span class="token plain"> -q </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT * FROM</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">   mysql(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'localhost:3306',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'my_sql_database',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'my_sql_table',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'user',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'password'</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">INTO OUTFILE 'my_output_file.parquet'"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_WoCw"><div class="alert-icon admonitionIcon_Ibzs"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></div><div class="alert-content admonitionContent_vXIg"><div class="admonitionHeading_TMsN">note</div><p>Because the name of the output file has a <code>.parquet</code> extension, ClickHouse assumes we want the Parquet format, so notice we omitted the <code>FORMAT Parquet</code> clause.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="export-mysql-to-csv">Export MySQL to CSV<a href="#export-mysql-to-csv" class="hash-link" aria-label="Direct link to Export MySQL to CSV" title="Direct link to Export MySQL to CSV">​</a></h2><p>It's the same as for Parquet, except this time we use a <code>.csv</code> extension on the filename. ClickHouse will realize we want a comma-separated output and that's how the data will be written to the file:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">./clickhouse </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">local</span><span class="token plain"> -q </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT * FROM</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">   mysql(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'localhost:3306',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'my_sql_database',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'my_sql_table',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'user',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'password'</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">INTO OUTFILE 'my_output_file.csv'"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="export-mysql-to-json">Export MySQL to JSON<a href="#export-mysql-to-json" class="hash-link" aria-label="Direct link to Export MySQL to JSON" title="Direct link to Export MySQL to JSON">​</a></h2><p>To go from MySQL to JSON, just change the extension on the filename to <code>jsonl</code> or <code>ndjson</code>:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">./clickhouse </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">local</span><span class="token plain"> -q </span><span class="token string" style="color:rgb(206, 145, 120)">"SELECT * FROM</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">   mysqlql(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'localhost:3306',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'my_sql_database',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'my_sql_table',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'user',</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">    'password'</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token string" style="color:rgb(206, 145, 120)">INTO OUTFILE 'my_output_file.ndjson'"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>It's impressive how simple yet powerful the <code>clickhouse-local</code> tool really is. You can easily read data from a database like MySQL and output it into <a href="https://clickhouse.com/docs/en/sql-reference/formats/" target="_blank" rel="noopener noreferrer">all types of different output formats</a>.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Code: 279. DB::NetException: All connection tries failed.]]></title>
        <id>https://clickhouse.com/docs/knowledgebase/connection_timeout_remote_remoteSecure</id>
        <link href="https://clickhouse.com/docs/knowledgebase/connection_timeout_remote_remoteSecure"/>
        <updated>2023-03-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[When using the `remote` or `remoteSecure` table functions on a node that is located more than 100ms (latency wise) away from the remote node, it is common to encounter the following timeout error.]]></summary>
        <content type="html"><![CDATA[<p><strong>Problem</strong>
<a href="https://clickhouse.com/docs/en/sql-reference/table-functions/remote/" target="_blank" rel="noopener noreferrer"><code>remote()</code> or <code>remoteSecure()</code></a> table function allows the access of remote table from another ClickHouse node.</p><p>When using these functions on a node that is located more than 100ms (latency wise) away from the remote node, it is common to encounter the following timeout error.</p><div class="codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">4776d4bd8190 :) SELECT * FROM remoteSecure('HOSTNAME.us-east-2.aws.clickhouse.cloud', DATABASE, TABLE, 'USER', 'USER_PASSWORD')</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">SELECT *</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM remoteSecure('HOSTNAME.us-east-2.aws.clickhouse.cloud', DATABASE, TABLE, 'USER', 'USER_PASSWORD')</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Query id: 2bd6ddd0-66d9-4d19-830f-87e3cec3724b</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">0 rows in set. Elapsed: 1.213 sec.</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Received exception from server (version 22.6.9):</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Code: 519. DB::Exception: Received from localhost:9000. DB::NetException. DB::NetException: All attempts to get table structure failed. Log:</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Code: 279. DB::NetException: All connection tries failed. Log:</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Code: 209. DB::NetException: Timeout: connect timed out: 18.218.245.169:9440 (hc7d963h1t.us-east-2.aws.clickhouse.cloud:9440, connection timeout 100 ms). (SOCKET_TIMEOUT) (version 22.6.9.11 (official build))</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Code: 209. DB::NetException: Timeout: connect timed out: 18.218.245.169:9440 (hc7d963h1t.us-east-2.aws.clickhouse.cloud:9440, connection timeout 100 ms). (SOCKET_TIMEOUT) (version 22.6.9.11 (official build))</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Code: 209. DB::NetException: Timeout: connect timed out: 18.218.245.169:9440 (hc7d963h1t.us-east-2.aws.clickhouse.cloud:9440, connection timeout 100 ms). (SOCKET_TIMEOUT) (version 22.6.9.11 (official build))</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">. (ALL_CONNECTION_TRIES_FAILED) (version 22.6.9.11 (official build))</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">. (NO_REMOTE_SHARD_AVAILABLE)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><strong>Workaround</strong>
To get increase the connection timeout, set <a href="https://github.com/ClickHouse/ClickHouse/blob/master/src/Core/Settings.h#L67" target="_blank" rel="noopener noreferrer"><code>connect_timeout_with_failover_secure_ms</code></a> to a higher value (e.g. 1 second) from the default 100ms.</p><div class="codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">4776d4bd8190 :) SELECT * FROM remoteSecure('HOSTNAME.us-east-2.aws.clickhouse.cloud:9440', DATABASE, TABLE, 'USER', 'USER_PASSWORD') SETTINGS connect_timeout_with_failover_secure_ms = 1000</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">SELECT *</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM remoteSecure('HOSTNAME.us-east-2.aws.clickhouse.cloud:9440', DATABASE, TABLE, 'USER', 'USER_PASSWORD')</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">SETTINGS connect_timeout_with_failover_secure_ms = 1000</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">Query id: 8e2f4d41-307b-4e61-abb8-809190023247</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌─x─┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ 1 │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└───┘</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">1 row in set. Elapsed: 2.403 sec.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DB::Exception: Too many parts (600). Merges are processing significantly slower than inserts]]></title>
        <id>https://clickhouse.com/docs/knowledgebase/exception-too-many-parts</id>
        <link href="https://clickhouse.com/docs/knowledgebase/exception-too-many-parts"/>
        <updated>2023-03-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The main requirement about inserting into Clickhouse: you should never send too many INSERT statements per second. Ideally - one insert per second / per few seconds.]]></summary>
        <content type="html"><![CDATA[<p>The main requirement about inserting into Clickhouse: you should never send too many <code>INSERT</code> statements per second. Ideally - one insert per second / per few seconds.</p><p>So you can insert 100K rows per second but only with one big bulk <code>INSERT</code> statement. When you send hundreds / thousands insert statements per second to *MergeTree table you will always get some errors, and it can not be changed by adjusting some settings.</p><p>If you can't combine lot of inserts into one big bulk insert statement outside - then you should create Buffer table before *MergeTree table.</p><ol><li><p>Each insert create a folder in  <code>/var/lib/clickhouse/.../table_name/</code>. Inside that folder there are 2 files per each column - one with data (compressed), second with index. Data is physically sorted by primary key inside those files. Those folders are called '<strong>parts</strong>'.</p></li><li><p>ClickHouse merges those smaller parts to bigger parts in the background. It chooses parts to merge according to some rules. After merging two (or more) parts one bigger part is being created and old parts are queued to be removed. The settings you list allow finetuning the rules of merging parts. The goal of merging process - is to leave one big part for each partition (or few big parts per partition which are not worth to merge because they are too big). Please check also that <a href="https://github.com/yandex/ClickHouse/issues/1661#issuecomment-352739726" target="_blank" rel="noopener noreferrer">comment</a>.</p></li><li><p>If you create new parts too fast (for example by doing lot of small inserts) and ClickHouse is not able to merge them with proper speed (so new parts come faster than ClickHouse can merge them) - then you get the exception 'Merges are processing significantly slower than inserts'. You can try to increase the limit but you can get the situation then you get filesystem problems caused by the too big number of files / directories (like inodes limit).</p></li><li><p>If you insert to lot of partitions at once the problem is multiplied by the number of partitions affected by insert.</p></li><li><p>You can try to adjust the behaviour of clickhouse with one of the listed settings, or with max_insert_block_size / max_block_size  / insert_format_max_block_size / max_client_network_bandwidth.  But: the better solution is just to insert data in expected tempo. The expected tempo is: <strong>one insert per 1-2 sec, each insert containing 10K-500K rows of data</strong>.</p></li><li><p>So proper solution to solve "Merges are processing significantly slower than inserts"  is to adjust the number of inserts per second and number of rows in each insert. Use batch insert to combine small inserts into one bigger if data comes row-by-row. Throttle huge inserts if you have too much data to insert at once. Don't change clickhouse internals, unless you really understand well what does they it mean.</p></li><li><p>If your data comes faster than 500K rows per second - most probably you need more servers in the cluster to serve that traffic, not the adjustment of settings.</p></li><li><p>The speed of background merges usually depends on storage speed, used compression settings, and mergetree option, i.e. merge algorithm - plain merge / aggregating / summing / collapsing etc. &amp;  used soring key.</p></li></ol>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[How to import JSON into ClickHouse?]]></title>
        <id>https://clickhouse.com/docs/knowledgebase/json-import</id>
        <link href="https://clickhouse.com/docs/knowledgebase/json-import"/>
        <updated>2023-03-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[There are multiple JSON variations among them, but the most commonly used for data ingestion is JSONEachRow. It expects one JSON object per row, each object separated by a newline.]]></summary>
        <content type="html"><![CDATA[<p>ClickHouse supports a wide range of <a href="https://clickhouse.com/docs/en/interfaces/formats/" target="_blank" rel="noopener noreferrer">data formats for input and output</a>. There are multiple JSON variations among them, but the most commonly used for data ingestion is <a href="https://clickhouse.com/docs/en/interfaces/formats/#jsoneachrow" target="_blank" rel="noopener noreferrer">JSONEachRow</a>. It expects one JSON object per row, each object separated by a newline.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="examples">Examples<a href="#examples" class="hash-link" aria-label="Direct link to Examples" title="Direct link to Examples">​</a></h2><p>Using <a href="https://clickhouse.com/docs/en/interfaces/http/" target="_blank" rel="noopener noreferrer">HTTP interface</a>:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">$ </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'{"foo":"bar"}'</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">|</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">curl</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'http://localhost:8123/?query=INSERT%20INTO%20test%20FORMAT%20JSONEachRow'</span><span class="token plain"> --data-binary @-</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Using <a href="https://clickhouse.com/docs/en/interfaces/cli/" target="_blank" rel="noopener noreferrer">CLI interface</a>:</p><div class="language-bash codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">$ </span><span class="token builtin class-name" style="color:rgb(78, 201, 176)">echo</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'{"foo":"bar"}'</span><span class="token plain">  </span><span class="token operator" style="color:rgb(212, 212, 212)">|</span><span class="token plain"> clickhouse-client --query</span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token string" style="color:rgb(206, 145, 120)">"INSERT INTO test FORMAT JSONEachRow"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Instead of inserting data manually, you might consider to use one of <a href="https://clickhouse.com/docs/en/interfaces/" target="_blank" rel="noopener noreferrer">client libraries</a> instead.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="useful-settings">Useful Settings<a href="#useful-settings" class="hash-link" aria-label="Direct link to Useful Settings" title="Direct link to Useful Settings">​</a></h2><ul><li><code>input_format_skip_unknown_fields</code> allows to insert JSON even if there were additional fields not present in table schema (by discarding them).</li><li><code>input_format_import_nested_json</code> allows to insert nested JSON objects into columns of <a href="https://clickhouse.com/docs/en/sql-reference/data-types/nested-data-structures/nested/" target="_blank" rel="noopener noreferrer">Nested</a> type.</li></ul><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_WoCw"><div class="alert-icon admonitionIcon_Ibzs"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></div><div class="alert-content admonitionContent_vXIg"><div class="admonitionHeading_TMsN">note</div><p>Settings are specified as <code>GET</code> parameters for the HTTP interface or as additional command-line arguments prefixed with <code>--</code> for the <code>CLI</code> interface.</p></div></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Useful queries for troubleshooting]]></title>
        <id>https://clickhouse.com/docs/knowledgebase/useful-queries-for-troubleshooting</id>
        <link href="https://clickhouse.com/docs/knowledgebase/useful-queries-for-troubleshooting"/>
        <updated>2023-03-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In no particular order, here are some handy queries for troubleshooting ClickHouse and figuring out what is happening. We also have a great blog with some essential queries for monitoring ClickHouse.]]></summary>
        <content type="html"><![CDATA[<p>In no particular order, here are some handy queries for troubleshooting ClickHouse and figuring out what is happening. We also have a great blog with some <a href="https://clickhouse.com/blog/monitoring-troubleshooting-select-queries-clickhouse" target="_blank" rel="noopener noreferrer">essential queries for monitoring ClickHouse</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="view-which-settings-have-been-changed-from-the-default">View which settings have been changed from the default<a href="#view-which-settings-have-been-changed-from-the-default" class="hash-link" aria-label="Direct link to View which settings have been changed from the default" title="Direct link to View which settings have been changed from the default">​</a></h2><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> system</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">settings</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">WHERE</span><span class="token plain"> changed</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="get-the-size-of-all-your-tables">Get the size of all your tables<a href="#get-the-size-of-all-your-tables" class="hash-link" aria-label="Direct link to Get the size of all your tables" title="Direct link to Get the size of all your tables">​</a></h2><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    formatReadableSize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">as</span><span class="token plain"> size</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> system</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">parts</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">WHERE</span><span class="token plain"> active</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The response looks like:</p><div class="language-response codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-response codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌─table───────────┬─size──────┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ stat            │ 38.89 MiB │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ customers       │ 525.00 B  │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ my_sparse_table │ 40.73 MiB │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ crypto_prices   │ 32.18 MiB │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ hackernews      │ 6.23 GiB  │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└─────────────────┴───────────┘</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="row-count-and-average-day-size-of-your-table">Row count and average day size of your table<a href="#row-count-and-average-day-size-of-your-table" class="hash-link" aria-label="Direct link to Row count and average day size of your table" title="Direct link to Row count and average day size of your table">​</a></h2><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    formatReadableSize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">size</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> size</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    days</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    formatReadableSize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">avgDaySize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> avgDaySize</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> size</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token function" style="color:rgb(220, 220, 170)">min</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">min_date</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> min_date</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token function" style="color:rgb(220, 220, 170)">max</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">max_date</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> max_date</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        max_date </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> min_date </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> days</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        size </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">max_date </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> min_date</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> avgDaySize</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> system</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">parts</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">WHERE</span><span class="token plain"> active</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">DESC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="compression-columns-percentage-as-well-as-the-size-of-primary-index-in-memory">Compression columns percentage as well as the size of primary index in memory<a href="#compression-columns-percentage-as-well-as-the-size-of-primary-index-in-memory" class="hash-link" aria-label="Direct link to Compression columns percentage as well as the size of primary index in memory" title="Direct link to Compression columns percentage as well as the size of primary index in memory">​</a></h2><p>You can see how compressed your data is by column. This query also returns the size of your primary indexes in memory - useful to know because primary indexes must fit in memory.</p><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    parts</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">columns</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">compressed_size</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">columns</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">uncompressed_size</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">columns</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">compression_ratio</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">columns</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">compression_percentage</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        formatReadableSize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">data_uncompressed_bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> uncompressed_size</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        formatReadableSize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">data_compressed_bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> compressed_size</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token function" style="color:rgb(220, 220, 170)">round</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">data_compressed_bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">data_uncompressed_bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">3</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> compression_ratio</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token function" style="color:rgb(220, 220, 170)">round</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">100</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">data_compressed_bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">100</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">data_uncompressed_bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">3</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> compression_percentage</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> system</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token keyword" style="color:rgb(86, 156, 214)">columns</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">columns</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">RIGHT</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">JOIN</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token function" style="color:rgb(220, 220, 170)">max</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">modification_time</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> latest_modification</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        formatReadableSize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> disk_size</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        formatReadableSize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">primary_key_bytes_in_memory</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> primary_keys_size</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">any</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">engine</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">engine</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> bytes_size</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> system</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">parts</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">WHERE</span><span class="token plain"> active</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">database</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> parts </span><span class="token keyword" style="color:rgb(86, 156, 214)">ON</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">columns</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> parts</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"> parts</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">bytes_size </span><span class="token keyword" style="color:rgb(86, 156, 214)">DESC</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="number-of-queries-sent-by-client-in-the-last-10-minutes">Number of queries sent by client in the last 10 minutes<a href="#number-of-queries-sent-by-client-in-the-last-10-minutes" class="hash-link" aria-label="Direct link to Number of queries sent by client in the last 10 minutes" title="Direct link to Number of queries sent by client in the last 10 minutes">​</a></h2><p>Feel free to increase or decrease the time interval in the <code>toIntervalMinute(10)</code> function:</p><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    client_name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token function" style="color:rgb(220, 220, 170)">count</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    query_kind</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    toStartOfMinute</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">event_time</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> event_time_m</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> system</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">query_log</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">WHERE</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">type</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'QueryStart'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">AND</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">event_time </span><span class="token operator" style="color:rgb(212, 212, 212)">&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token function" style="color:rgb(220, 220, 170)">now</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token plain"> toIntervalMinute</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">10</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    event_time_m</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    client_name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    query_kind</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    event_time_m </span><span class="token keyword" style="color:rgb(86, 156, 214)">DESC</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token function" style="color:rgb(220, 220, 170)">count</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">ASC</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="number-of-parts-in-each-partition">Number of parts in each partition<a href="#number-of-parts-in-each-partition" class="hash-link" aria-label="Direct link to Number of parts in each partition" title="Direct link to Number of parts in each partition">​</a></h2><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    concat</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">database</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'.'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    partition_id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token function" style="color:rgb(220, 220, 170)">count</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> system</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">parts</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">WHERE</span><span class="token plain"> active</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">database</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    partition_id</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="finding-long-running-queries">Finding long running queries<a href="#finding-long-running-queries" class="hash-link" aria-label="Direct link to Finding long running queries" title="Direct link to Finding long running queries">​</a></h2><p>This can help find queries that are stuck:</p><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    elapsed</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    initial_user</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    client_name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    hostname</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    query_id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    query</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> clusterAllReplicas</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">default</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> system</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">processes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"> elapsed </span><span class="token keyword" style="color:rgb(86, 156, 214)">DESC</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Using the query id of the worst running query, we can get a stack trace that can help when debugging.</p><div class="codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">SET allow_introspection_functions=1;</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">SELECT</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    arrayStringConcat(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        arrayMap(</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            x,</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            y -&gt; concat(x, ': ', y),</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            arrayMap(x -&gt; addressToLine(x), trace),</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">            arrayMap(x -&gt; demangle(addressToSymbol(x)), trace)</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        ),</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        '\n'</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    ) as trace</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    system.stack_trace</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">WHERE</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    query_id = '0bb6e88b-9b9a-4ffc-b612-5746c859e360';</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="view-the-most-recent-errors">View the most recent errors<a href="#view-the-most-recent-errors" class="hash-link" aria-label="Direct link to View the most recent errors" title="Direct link to View the most recent errors">​</a></h2><div class="codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">SELECT *</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">FROM system.errors</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">ORDER BY last_error_time DESC</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The response looks like:</p><div class="language-response codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-response codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌─name──────────────────┬─code─┬─value─┬─────last_error_time─┬─last_error_message──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┬─last_error_trace─┬─remote─┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ UNKNOWN_TABLE         │   60 │     3 │ 2023-03-14 01:02:35 │ Table system.stack_trace doesn't exist                                                                                                              │ []               │      0 │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ BAD_GET               │  170 │     1 │ 2023-03-14 00:58:55 │ Requested cluster 'default' not found                                                                                                               │ []               │      0 │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ UNKNOWN_IDENTIFIER    │   47 │     1 │ 2023-03-14 00:49:12 │ Missing columns: 'parts.table' 'table' while processing query: 'table = parts.table', required columns: 'table' 'parts.table' 'table' 'parts.table' │ []               │      0 │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ NO_ELEMENTS_IN_CONFIG │  139 │     2 │ 2023-03-14 00:42:11 │ Certificate file is not set.                                                                                                                        │ []               │      0 │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└───────────────────────┴──────┴───────┴─────────────────────┴─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┴──────────────────┴────────┘</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="top-10-queries-that-are-using-the-most-cpu-and-memory">Top 10 queries that are using the most CPU and memory<a href="#top-10-queries-that-are-using-the-most-cpu-and-memory" class="hash-link" aria-label="Direct link to Top 10 queries that are using the most CPU and memory" title="Direct link to Top 10 queries that are using the most CPU and memory">​</a></h2><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">type</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    event_time</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    initial_query_id</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    formatReadableSize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">memory_usage</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> memory</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token identifier punctuation" style="color:rgb(212, 212, 212)">`</span><span class="token identifier">ProfileEvents.Values</span><span class="token identifier punctuation" style="color:rgb(212, 212, 212)">`</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">indexOf</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token identifier punctuation" style="color:rgb(212, 212, 212)">`</span><span class="token identifier">ProfileEvents.Names</span><span class="token identifier punctuation" style="color:rgb(212, 212, 212)">`</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'UserTimeMicroseconds'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> userCPU</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token identifier punctuation" style="color:rgb(212, 212, 212)">`</span><span class="token identifier">ProfileEvents.Values</span><span class="token identifier punctuation" style="color:rgb(212, 212, 212)">`</span><span class="token punctuation" style="color:rgb(212, 212, 212)">[</span><span class="token plain">indexOf</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token identifier punctuation" style="color:rgb(212, 212, 212)">`</span><span class="token identifier">ProfileEvents.Names</span><span class="token identifier punctuation" style="color:rgb(212, 212, 212)">`</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'SystemTimeMicroseconds'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">]</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> systemCPU</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    normalizedQueryHash</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">query</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> normalized_query_hash</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> system</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">query_log</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"> memory_usage </span><span class="token keyword" style="color:rgb(86, 156, 214)">DESC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">LIMIT</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">10</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="how-much-disk-space-are-my-projection-using">How much disk space are my projection using<a href="#how-much-disk-space-are-my-projection-using" class="hash-link" aria-label="Direct link to How much disk space are my projection using" title="Direct link to How much disk space are my projection using">​</a></h2><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    parent_name</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    formatReadableSize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bytes_on_disk</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    formatReadableSize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">parent_bytes_on_disk</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> parent_bytes</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    bytes_on_disk </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> parent_bytes_on_disk </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> ratio</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> system</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">projection_parts</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="show-disk-storage-number-of-parts-number-of-rows-in-systemparts-and-marks-across-databases">Show disk storage, number of parts, number of rows in system.parts and marks across databases<a href="#show-disk-storage-number-of-parts-number-of-rows-in-systemparts-and-marks-across-databases" class="hash-link" aria-label="Direct link to Show disk storage, number of parts, number of rows in system.parts and marks across databases" title="Direct link to Show disk storage, number of parts, number of rows in system.parts and marks across databases">​</a></h2><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">database</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">partition</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token function" style="color:rgb(220, 220, 170)">count</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> parts</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    formatReadableSize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bytes_on_disk</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> bytes_on_disk</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    formatReadableQuantity</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">marks</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> marks</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> system</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">parts</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">WHERE</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">database</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">!=</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'system'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">AND</span><span class="token plain"> active</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">GROUP</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">database</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">table</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">partition</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">database</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">ASC</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="list-details-of-recently-written-new-parts">List details of recently written new parts<a href="#list-details-of-recently-written-new-parts" class="hash-link" aria-label="Direct link to List details of recently written new parts" title="Direct link to List details of recently written new parts">​</a></h2><p>The details include when they got created, how large they are, how many rows, and more:</p><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    modification_time</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    formatReadableSize</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">bytes_on_disk</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> clusterAllReplicas</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">default</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> system</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain">parts</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">WHERE</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">database</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'default'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">AND</span><span class="token plain"> active </span><span class="token operator" style="color:rgb(212, 212, 212)">AND</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">level</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">ORDER</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">BY</span><span class="token plain"> modification_time </span><span class="token keyword" style="color:rgb(86, 156, 214)">DESC</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">LIMIT</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">100</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[It's Pi Day! Let's calculate pi using SQL]]></title>
        <id>https://clickhouse.com/docs/knowledgebase/calculate-pi-using-sql</id>
        <link href="https://clickhouse.com/docs/knowledgebase/calculate-pi-using-sql"/>
        <updated>2023-03-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Happy Pi Day! We thought it would be fun to calculate pi using SQL queries in ClickHouse. Here is what we came up with so far...]]></summary>
        <content type="html"><![CDATA[<p>Happy Pi Day! We thought it would be fun to calculate pi using SQL queries in ClickHouse. Here is what we came up with so far...</p><ol><li>This one uses the ClickHouse <code>numbers_mt</code> table function to return 1B rows and only takes 40ms to compute the calculation:</li></ol><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">4</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">if</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">number </span><span class="token operator" style="color:rgb(212, 212, 212)">%</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">number </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> pi</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> numbers_mt</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">1000000000.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌────────────────pi─┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ </span><span class="token number" style="color:rgb(181, 206, 168)">3.141592652589797</span><span class="token plain"> │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└───────────────────┘</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">row</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">in</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">set</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain"> Elapsed: </span><span class="token number" style="color:rgb(181, 206, 168)">0.432</span><span class="token plain"> sec</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain"> Processed </span><span class="token number" style="color:rgb(181, 206, 168)">1.00</span><span class="token plain"> billion </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">8.00</span><span class="token plain"> GB </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">2.32</span><span class="token plain"> billion </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">18.53</span><span class="token plain"> GB</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="2"><li>The following example also processes 1B numbers, just not as quickly:</li></ol><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">3</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">4</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">sum</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">if</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">number </span><span class="token operator" style="color:rgb(212, 212, 212)">%</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">if</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">number </span><span class="token operator" style="color:rgb(212, 212, 212)">%</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">4</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">number </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">number </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">number </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">number </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">number </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">number </span><span class="token operator" style="color:rgb(212, 212, 212)">+</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">0</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> pi</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> numbers_mt</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">10000000000</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌─────────────────pi─┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ </span><span class="token number" style="color:rgb(181, 206, 168)">3.1415926525808087</span><span class="token plain"> │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└────────────────────┘</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">row</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">in</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">set</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain"> Elapsed: </span><span class="token number" style="color:rgb(181, 206, 168)">9.825</span><span class="token plain"> sec</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain"> Processed </span><span class="token number" style="color:rgb(181, 206, 168)">10.00</span><span class="token plain"> billion </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">80.00</span><span class="token plain"> GB </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">1.02</span><span class="token plain"> billion </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">8.14</span><span class="token plain"> GB</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="3"><li>This one is obviously our favorite in ClickHouse (and the most accurate!):</li></ol><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> pi</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌──────────────pi</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain">─┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ </span><span class="token number" style="color:rgb(181, 206, 168)">3.141592653589793</span><span class="token plain"> │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└───────────────────┘</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">row</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">in</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">set</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain"> Elapsed: </span><span class="token number" style="color:rgb(181, 206, 168)">0.008</span><span class="token plain"> sec</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="4"><li>Someone knew their trigonometry with this one:</li></ol><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> asin</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> pi</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌────────────────pi─┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ </span><span class="token number" style="color:rgb(181, 206, 168)">3.141592653589793</span><span class="token plain"> │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└───────────────────┘</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">row</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">in</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">set</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain"> Elapsed: </span><span class="token number" style="color:rgb(181, 206, 168)">0.005</span><span class="token plain"> sec</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="5"><li>Here is a handy API that lets you specify the number of digits you want:</li></ol><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> url</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token string" style="color:rgb(206, 145, 120)">'https://api.pi.delivery/v1/pi?start=0&amp;numberOfDigits=100'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(206, 145, 120)">'JSONEachRow'</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌───────────────content─┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ </span><span class="token number" style="color:rgb(181, 206, 168)">3.1415926535897933</span><span class="token plain">e99 │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└───────────────────────┘</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">row</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">in</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">set</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain"> Elapsed: </span><span class="token number" style="color:rgb(181, 206, 168)">0.556</span><span class="token plain"> sec</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="6"><li>This one is clever  - it uses ClickHouse distance functions:</li></ol><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">WITH</span><span class="token plain"> random_points </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">rand64</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> pow</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">64</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> rand64</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> pow</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">64</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">point</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">        </span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> numbers</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">1000000000</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">4</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> countIf</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">L2Norm</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token keyword" style="color:rgb(86, 156, 214)">point</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">&lt;</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">count</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> pi</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> random_points</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌──────────pi─┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ </span><span class="token number" style="color:rgb(181, 206, 168)">3.141627208</span><span class="token plain"> │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└─────────────┘</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">row</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">in</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">set</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain"> Elapsed: </span><span class="token number" style="color:rgb(181, 206, 168)">4.742</span><span class="token plain"> sec</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain"> Processed </span><span class="token number" style="color:rgb(181, 206, 168)">1.00</span><span class="token plain"> billion </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">8.00</span><span class="token plain"> GB </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">210.88</span><span class="token plain"> million </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1.69</span><span class="token plain"> GB</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="7"><li>If you're a physicist, you will be content with this one:</li></ol><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">22</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">7</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌─────divide</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">22</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">7</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain">─┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ </span><span class="token number" style="color:rgb(181, 206, 168)">3.142857142857143</span><span class="token plain"> │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└───────────────────┘</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="8"><li>Another indirect mehthod (this one came from Alexey Milovidov) that is accurate to 7 decimal places - and it's quick:</li></ol><div class="language-sql codeBlockContainer_APcc theme-code-block"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#9CDCFE"><span class="token keyword" style="color:rgb(86, 156, 214)">WITH</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token number" style="color:rgb(181, 206, 168)">10</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> length</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">number </span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">1000000000.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> length </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> x</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">SELECT</span><span class="token plain"> pow</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> length</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> </span><span class="token function" style="color:rgb(220, 220, 170)">avg</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">exp</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token operator" style="color:rgb(212, 212, 212)">-</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token plain">x </span><span class="token operator" style="color:rgb(212, 212, 212)">*</span><span class="token plain"> x</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">2</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">AS</span><span class="token plain"> pi</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token keyword" style="color:rgb(86, 156, 214)">FROM</span><span class="token plain"> numbers_mt</span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">1000000000.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">┌─────────────────pi─┐</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">│ </span><span class="token number" style="color:rgb(181, 206, 168)">3.1415926890388595</span><span class="token plain"> │</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain">└────────────────────┘</span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#9CDCFE"><span class="token plain"></span><span class="token number" style="color:rgb(181, 206, 168)">1</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">row</span><span class="token plain"> </span><span class="token operator" style="color:rgb(212, 212, 212)">in</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(86, 156, 214)">set</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain"> Elapsed: </span><span class="token number" style="color:rgb(181, 206, 168)">1.245</span><span class="token plain"> sec</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token plain"> Processed </span><span class="token number" style="color:rgb(181, 206, 168)">1.00</span><span class="token plain"> billion </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">8.00</span><span class="token plain"> GB </span><span class="token punctuation" style="color:rgb(212, 212, 212)">(</span><span class="token number" style="color:rgb(181, 206, 168)">803.25</span><span class="token plain"> million </span><span class="token keyword" style="color:rgb(86, 156, 214)">rows</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(181, 206, 168)">6.43</span><span class="token plain"> GB</span><span class="token operator" style="color:rgb(212, 212, 212)">/</span><span class="token plain">s</span><span class="token punctuation" style="color:rgb(212, 212, 212)">.</span><span class="token punctuation" style="color:rgb(212, 212, 212)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_WoCw"><div class="alert-icon admonitionIcon_Ibzs"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></div><div class="alert-content admonitionContent_vXIg"><div class="admonitionHeading_TMsN">note</div><p>If you have any more, we'd love for you to contribute. Thanks!</p></div></div>]]></content>
    </entry>
</feed>