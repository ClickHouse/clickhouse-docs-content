"use strict";(self.webpackChunknew_nav_docusaurus_2_2=self.webpackChunknew_nav_docusaurus_2_2||[]).push([[99688],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(g,s(s({ref:t},c),{},{components:n})):a.createElement(g,s({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},72963:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={slug:"/en/getting-started/example-datasets/wikistat",sidebar_label:"WikiStat"},s="WikiStat",o={unversionedId:"en/getting-started/example-datasets/wikistat",id:"en/getting-started/example-datasets/wikistat",title:"WikiStat",description:"The dataset contains 0.5 trillion records.",source:"@site/docs/en/getting-started/example-datasets/wikistat.md",sourceDirName:"en/getting-started/example-datasets",slug:"/en/getting-started/example-datasets/wikistat",permalink:"/docs/en/getting-started/example-datasets/wikistat",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/getting-started/example-datasets/wikistat.md",tags:[],version:"current",frontMatter:{slug:"/en/getting-started/example-datasets/wikistat",sidebar_label:"WikiStat"},sidebar:"docs",previous:{title:"Star Schema Benchmark",permalink:"/docs/en/getting-started/example-datasets/star-schema"},next:{title:"YouTube Dislikes",permalink:"/docs/en/getting-started/example-datasets/youtube-dislikes"}},l={},p=[],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"wikistat"},"WikiStat"),(0,r.kt)("p",null,"The dataset contains 0.5 trillion records."),(0,r.kt)("p",null,"See the video from FOSDEM 2023: ",(0,r.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=JlcI2Vfz_uk"},"https://www.youtube.com/watch?v=JlcI2Vfz_uk")),(0,r.kt)("p",null,"And the presentation: ",(0,r.kt)("a",{parentName:"p",href:"https://presentations.clickhouse.com/fosdem2023/"},"https://presentations.clickhouse.com/fosdem2023/")),(0,r.kt)("p",null,"Data source: ",(0,r.kt)("a",{parentName:"p",href:"https://dumps.wikimedia.org/other/pageviews/"},"https://dumps.wikimedia.org/other/pageviews/")),(0,r.kt)("p",null,"Getting the list of links:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'for i in {2015..2023}; do\n  for j in {01..12}; do\n    echo "${i}-${j}" >&2\n    curl -sSL "https://dumps.wikimedia.org/other/pageviews/$i/$i-$j/" \\\n      | grep -oE \'pageviews-[0-9]+-[0-9]+\\.gz\'\n  done\ndone | sort | uniq | tee links.txt\n')),(0,r.kt)("p",null,"Downloading the data:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sed -r 's!pageviews-([0-9]{4})([0-9]{2})[0-9]{2}-[0-9]+\\.gz!https://dumps.wikimedia.org/other/pageviews/\\1/\\1-\\2/\\0!' \\\n  links.txt | xargs -P3 wget --continue\n")),(0,r.kt)("p",null,"(it will take about 3 days)"),(0,r.kt)("p",null,"Creating a table:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE wikistat\n(\n    time DateTime CODEC(Delta, ZSTD(3)),\n    project LowCardinality(String),\n    subproject LowCardinality(String),\n    path String CODEC(ZSTD(3)),\n    hits UInt64 CODEC(ZSTD(3))\n)\nENGINE = MergeTree\nORDER BY (path, time);\n")),(0,r.kt)("p",null,"Loading the data:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"clickhouse-local --query \"\n  WITH replaceRegexpOne(_path, '^.+pageviews-(\\\\d{4})(\\\\d{2})(\\\\d{2})-(\\\\d{2})(\\\\d{2})(\\\\d{2}).gz$', '\\1-\\2-\\3 \\4-\\5-\\6')::DateTime AS time, \n       extractGroups(line, '^([^ \\\\.]+)(\\\\.[^ ]+)? +([^ ]+) +(\\\\d+) +(\\\\d+)$') AS values\n  SELECT \n    time, \n    values[1] AS project,\n    values[2] AS subproject,\n    values[3] AS path,\n    (values[4])::UInt64 AS hits,\n    (values[5])::UInt64 AS size\n  FROM file('pageviews*.gz', LineAsString)\n  WHERE length(values) = 5 FORMAT Native\n\" | clickhouse-client --query \"INSERT INTO wikistat FORMAT Native\"\n")))}d.isMDXComponent=!0}}]);