"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[11908],{3905:function(e,n,r){r.d(n,{Zo:function(){return l},kt:function(){return p}});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function s(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),u=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):s(s({},n),e)),r},l=function(e){var n=u(e.components);return t.createElement(c.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=u(r),p=o,b=m["".concat(c,".").concat(p)]||m[p]||f[p]||a;return r?t.createElement(b,s(s({ref:n},l),{},{components:r})):t.createElement(b,s({ref:n},l))}));function p(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=r[u];return t.createElement.apply(null,s)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},67523:function(e,n,r){r.r(n),r.d(n,{assets:function(){return l},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return f}});var t=r(87462),o=r(63366),a=(r(67294),r(3905)),s=["components"],i={sidebar_position:39,sidebar_label:"numbers"},c="numbers",u={unversionedId:"en/reference/sql-reference/table-functions/numbers",id:"en/reference/sql-reference/table-functions/numbers",title:"numbers",description:"numbers}",source:"@site/docs/en/reference/sql-reference/table-functions/numbers.md",sourceDirName:"en/reference/sql-reference/table-functions",slug:"/en/reference/sql-reference/table-functions/numbers",permalink:"/en/reference/sql-reference/table-functions/numbers",editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/reference/sql-reference/table-functions/numbers.md",tags:[],version:"current",sidebarPosition:39,frontMatter:{sidebar_position:39,sidebar_label:"numbers"},sidebar:"english",previous:{title:"merge",permalink:"/en/reference/sql-reference/table-functions/merge"},next:{title:"remote",permalink:"/en/reference/sql-reference/table-functions/remote"}},l={},f=[],m={toc:f};function p(e){var n=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,t.Z)({},m,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"numbers"},"numbers"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"numbers(N)")," \u2013 Returns a table with the single \u2018number\u2019 column (UInt64) that contains integers from 0 to N-1.\n",(0,a.kt)("inlineCode",{parentName:"p"},"numbers(N, M)")," - Returns a table with the single \u2018number\u2019 column (UInt64) that contains integers from N to (N + M - 1)."),(0,a.kt)("p",null,"Similar to the ",(0,a.kt)("inlineCode",{parentName:"p"},"system.numbers")," table, it can be used for testing and generating successive values, ",(0,a.kt)("inlineCode",{parentName:"p"},"numbers(N, M)")," more efficient than ",(0,a.kt)("inlineCode",{parentName:"p"},"system.numbers"),"."),(0,a.kt)("p",null,"The following queries are equivalent:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM numbers(10);\nSELECT * FROM numbers(0, 10);\nSELECT * FROM system.numbers LIMIT 10;\n")),(0,a.kt)("p",null,"Examples:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"-- Generate a sequence of dates from 2010-01-01 to 2010-12-31\nselect toDate('2010-01-01') + number as d FROM numbers(365);\n")))}p.isMDXComponent=!0}}]);