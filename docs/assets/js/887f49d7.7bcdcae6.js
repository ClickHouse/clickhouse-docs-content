"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[14485],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),l=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(t),m=a,h=u["".concat(i,".").concat(m)]||u[m]||p[m]||s;return t?r.createElement(h,o(o({ref:n},d),{},{components:t})):r.createElement(h,o({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=u;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<s;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},21995:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var r=t(87462),a=t(63366),s=(t(67294),t(3905)),o=["components"],c={},i="GROUPING",l={unversionedId:"en/sql-reference/aggregate-functions/grouping_function",id:"en/sql-reference/aggregate-functions/grouping_function",title:"GROUPING",description:"GROUPING",source:"@site/docs/en/sql-reference/aggregate-functions/grouping_function.md",sourceDirName:"en/sql-reference/aggregate-functions",slug:"/en/sql-reference/aggregate-functions/grouping_function",permalink:"/docs/en/sql-reference/aggregate-functions/grouping_function",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/aggregate-functions/grouping_function.md",tags:[],version:"current",frontMatter:{},sidebar:"english",previous:{title:"Parametric",permalink:"/docs/en/sql-reference/aggregate-functions/parametric-functions"},next:{title:"Table Functions",permalink:"/docs/en/sql-reference/table-functions/"}},d={},p=[{value:"GROUPING",id:"grouping-1",level:2},{value:"GROUPING SETS",id:"grouping-sets",level:2},{value:"Load sample data",id:"load-sample-data",level:3},{value:"Simple queries",id:"simple-queries",level:3},{value:"Comparing multiple GROUP BY statements with GROUPING SETS",id:"comparing-multiple-group-by-statements-with-grouping-sets",level:3},{value:"Comparing CUBE with GROUPING SETS",id:"comparing-cube-with-grouping-sets",level:3}],u={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"grouping"},"GROUPING"),(0,s.kt)("h2",{id:"grouping-1"},"GROUPING"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/statements/select/group-by/#rollup-modifier"},"ROLLUP")," and ",(0,s.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/statements/select/group-by/#cube-modifier"},"CUBE")," are modifiers to GROUP BY. Both of these calculate subtotals. ROLLUP takes an ordered list of columns, for example ",(0,s.kt)("inlineCode",{parentName:"p"},"(day, month, year)"),", and calculates subtotals at each level of the aggregation and then a grand total. CUBE calculates subtotals across all possible combinations of the columns specified. GROUPING identifies which rows returned by ROLLUP or CUBE are superaggregates, and which are rows that would be returned by an unmodified GROUP BY."),(0,s.kt)("p",null,"The GROUPING function takes multiple columns as an argument, and returns a bitmask. "),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"1")," indicates that a row returned by a ",(0,s.kt)("inlineCode",{parentName:"li"},"ROLLUP")," or ",(0,s.kt)("inlineCode",{parentName:"li"},"CUBE")," modifier to ",(0,s.kt)("inlineCode",{parentName:"li"},"GROUP BY")," is a subtotal"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"0")," indicates that a row returned by a ",(0,s.kt)("inlineCode",{parentName:"li"},"ROLLUP")," or ",(0,s.kt)("inlineCode",{parentName:"li"},"CUBE")," is a row that is not a subtotal")),(0,s.kt)("h2",{id:"grouping-sets"},"GROUPING SETS"),(0,s.kt)("p",null,"By default, the CUBE modifier calculates subtotals for all possible combinations of the columns passed to CUBE. GROUPING SETS allows you to specify the specific combinations to calculate."),(0,s.kt)("p",null,"Analyzing hierarchical data is a good use case for ROLLUP, CUBE, and GROUPING SETS modifiers.  The sample here is a table containing data  about what Linux distribution, and the version of that distribution is installed across two datacenters.  It may be valuable to look at the data by distribution, version, and location."),(0,s.kt)("h3",{id:"load-sample-data"},"Load sample data"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE servers ( datacenter VARCHAR(255),\n                         distro VARCHAR(255) NOT NULL,\n                         version VARCHAR(50) NOT NULL,\n                         quantity INT\n                       )\n                        ORDER BY (datacenter, distro, version)\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO servers(datacenter, distro, version, quantity)\nVALUES ('Schenectady', 'Arch','2022.08.05',50),\n       ('Westport', 'Arch','2022.08.05',40),\n       ('Schenectady','Arch','2021.09.01',30),\n       ('Westport', 'Arch','2021.09.01',20),\n       ('Schenectady','Arch','2020.05.01',10),\n       ('Westport', 'Arch','2020.05.01',5),\n       ('Schenectady','RHEL','9',60),\n       ('Westport','RHEL','9',70),\n       ('Westport','RHEL','7',80),\n       ('Schenectady','RHEL','7',80)\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT \n    *\nFROM\n    servers;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500datacenter\u2500\u2500\u252c\u2500distro\u2500\u252c\u2500version\u2500\u2500\u2500\u2500\u252c\u2500quantity\u2500\u2510\n\u2502 Schenectady \u2502 Arch   \u2502 2020.05.01 \u2502       10 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502 2021.09.01 \u2502       30 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502 2022.08.05 \u2502       50 \u2502\n\u2502 Schenectady \u2502 RHEL   \u2502 7          \u2502       80 \u2502\n\u2502 Schenectady \u2502 RHEL   \u2502 9          \u2502       60 \u2502\n\u2502 Westport    \u2502 Arch   \u2502 2020.05.01 \u2502        5 \u2502\n\u2502 Westport    \u2502 Arch   \u2502 2021.09.01 \u2502       20 \u2502\n\u2502 Westport    \u2502 Arch   \u2502 2022.08.05 \u2502       40 \u2502\n\u2502 Westport    \u2502 RHEL   \u2502 7          \u2502       80 \u2502\n\u2502 Westport    \u2502 RHEL   \u2502 9          \u2502       70 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n10 rows in set. Elapsed: 0.409 sec.\n")),(0,s.kt)("h3",{id:"simple-queries"},"Simple queries"),(0,s.kt)("p",null,"Get the count of servers in each data center by distribution: "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    datacenter,\n    distro, \n    SUM (quantity) qty\nFROM\n    servers\nGROUP BY\n    datacenter,\n    distro;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500datacenter\u2500\u2500\u252c\u2500distro\u2500\u252c\u2500qty\u2500\u2510\n\u2502 Schenectady \u2502 RHEL   \u2502 140 \u2502\n\u2502 Westport    \u2502 Arch   \u2502  65 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502  90 \u2502\n\u2502 Westport    \u2502 RHEL   \u2502 150 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\n4 rows in set. Elapsed: 0.212 sec.\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    datacenter, \n    SUM (quantity) qty\nFROM\n    servers\nGROUP BY\n    datacenter;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500datacenter\u2500\u2500\u252c\u2500qty\u2500\u2510\n\u2502 Westport    \u2502 215 \u2502\n\u2502 Schenectady \u2502 230 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\n2 rows in set. Elapsed: 0.277 sec. \n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    distro, \n    SUM (quantity) qty\nFROM\n    servers\nGROUP BY\n    distro;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-response"},"\n\u250c\u2500distro\u2500\u252c\u2500qty\u2500\u2510\n\u2502 Arch   \u2502 155 \u2502\n\u2502 RHEL   \u2502 290 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\n2 rows in set. Elapsed: 0.352 sec. \n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    SUM(quantity) qty\nFROM\n    servers;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500qty\u2500\u2510\n\u2502 445 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2518\n\n1 row in set. Elapsed: 0.244 sec. \n")),(0,s.kt)("h3",{id:"comparing-multiple-group-by-statements-with-grouping-sets"},"Comparing multiple GROUP BY statements with GROUPING SETS"),(0,s.kt)("p",null,"Breaking down the data without CUBE, ROLLUP, or GROUPING SETS:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    datacenter,\n    distro, \n    SUM (quantity) qty\nFROM\n    servers\nGROUP BY\n    datacenter,\n    distro\nUNION ALL\nSELECT\n    datacenter, \n    null,\n    SUM (quantity) qty\nFROM\n    servers\nGROUP BY\n    datacenter\nUNION ALL\nSELECT\n    null,\n    distro, \n    SUM (quantity) qty\nFROM\n    servers\nGROUP BY\n    distro\nUNION ALL\nSELECT\n    null,\n    null,\n    SUM(quantity) qty\nFROM\n    servers;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500datacenter\u2500\u252c\u2500distro\u2500\u252c\u2500qty\u2500\u2510\n\u2502 \u1d3a\u1d41\u1d38\u1d38       \u2502 \u1d3a\u1d41\u1d38\u1d38   \u2502 445 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500datacenter\u2500\u2500\u252c\u2500distro\u2500\u252c\u2500qty\u2500\u2510\n\u2502 Westport    \u2502 \u1d3a\u1d41\u1d38\u1d38   \u2502 215 \u2502\n\u2502 Schenectady \u2502 \u1d3a\u1d41\u1d38\u1d38   \u2502 230 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500datacenter\u2500\u2500\u252c\u2500distro\u2500\u252c\u2500qty\u2500\u2510\n\u2502 Schenectady \u2502 RHEL   \u2502 140 \u2502\n\u2502 Westport    \u2502 Arch   \u2502  65 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502  90 \u2502\n\u2502 Westport    \u2502 RHEL   \u2502 150 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500datacenter\u2500\u252c\u2500distro\u2500\u252c\u2500qty\u2500\u2510\n\u2502 \u1d3a\u1d41\u1d38\u1d38       \u2502 Arch   \u2502 155 \u2502\n\u2502 \u1d3a\u1d41\u1d38\u1d38       \u2502 RHEL   \u2502 290 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\n9 rows in set. Elapsed: 0.527 sec. \n")),(0,s.kt)("p",null,"Getting the same information using GROUPING SETS:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    datacenter,\n    distro, \n    SUM (quantity) qty\nFROM\n    servers\nGROUP BY\n    GROUPING SETS(\n        (datacenter,distro),\n        (datacenter),\n        (distro),\n        ()\n    )\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500datacenter\u2500\u2500\u252c\u2500distro\u2500\u252c\u2500qty\u2500\u2510\n\u2502 Schenectady \u2502 RHEL   \u2502 140 \u2502\n\u2502 Westport    \u2502 Arch   \u2502  65 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502  90 \u2502\n\u2502 Westport    \u2502 RHEL   \u2502 150 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500datacenter\u2500\u2500\u252c\u2500distro\u2500\u252c\u2500qty\u2500\u2510\n\u2502 Westport    \u2502        \u2502 215 \u2502\n\u2502 Schenectady \u2502        \u2502 230 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500datacenter\u2500\u252c\u2500distro\u2500\u252c\u2500qty\u2500\u2510\n\u2502            \u2502        \u2502 445 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500datacenter\u2500\u252c\u2500distro\u2500\u252c\u2500qty\u2500\u2510\n\u2502            \u2502 Arch   \u2502 155 \u2502\n\u2502            \u2502 RHEL   \u2502 290 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\n9 rows in set. Elapsed: 0.427 sec.\n")),(0,s.kt)("h3",{id:"comparing-cube-with-grouping-sets"},"Comparing CUBE with GROUPING SETS"),(0,s.kt)("p",null,"The CUBE in the next query, ",(0,s.kt)("inlineCode",{parentName:"p"},"CUBE(datacenter,distro,version)")," provides a hierarchy that may not make sense.  It does not make sense to look at Version across the two distributions (as Arch and RHEL do not have the same release cycle or version naming standards).  The GROUPING SETS example following this one is more appropriate as it groups ",(0,s.kt)("inlineCode",{parentName:"p"},"distro")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"version")," in the same set. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n   datacenter,\n   distro,\n   version,\n   SUM(quantity)\nFROM\n   servers\nGROUP BY\n   CUBE(datacenter,distro,version)\nORDER BY\n   datacenter,\n   distro;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500datacenter\u2500\u2500\u252c\u2500distro\u2500\u252c\u2500version\u2500\u2500\u2500\u2500\u252c\u2500sum(quantity)\u2500\u2510\n\u2502             \u2502        \u2502 7          \u2502           160 \u2502\n\u2502             \u2502        \u2502 2020.05.01 \u2502            15 \u2502\n\u2502             \u2502        \u2502 2021.09.01 \u2502            50 \u2502\n\u2502             \u2502        \u2502 2022.08.05 \u2502            90 \u2502\n\u2502             \u2502        \u2502 9          \u2502           130 \u2502\n\u2502             \u2502        \u2502            \u2502           445 \u2502\n\u2502             \u2502 Arch   \u2502 2021.09.01 \u2502            50 \u2502\n\u2502             \u2502 Arch   \u2502 2022.08.05 \u2502            90 \u2502\n\u2502             \u2502 Arch   \u2502 2020.05.01 \u2502            15 \u2502\n\u2502             \u2502 Arch   \u2502            \u2502           155 \u2502\n\u2502             \u2502 RHEL   \u2502 9          \u2502           130 \u2502\n\u2502             \u2502 RHEL   \u2502 7          \u2502           160 \u2502\n\u2502             \u2502 RHEL   \u2502            \u2502           290 \u2502\n\u2502 Schenectady \u2502        \u2502 9          \u2502            60 \u2502\n\u2502 Schenectady \u2502        \u2502 2021.09.01 \u2502            30 \u2502\n\u2502 Schenectady \u2502        \u2502 7          \u2502            80 \u2502\n\u2502 Schenectady \u2502        \u2502 2022.08.05 \u2502            50 \u2502\n\u2502 Schenectady \u2502        \u2502 2020.05.01 \u2502            10 \u2502\n\u2502 Schenectady \u2502        \u2502            \u2502           230 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502 2022.08.05 \u2502            50 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502 2021.09.01 \u2502            30 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502 2020.05.01 \u2502            10 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502            \u2502            90 \u2502\n\u2502 Schenectady \u2502 RHEL   \u2502 7          \u2502            80 \u2502\n\u2502 Schenectady \u2502 RHEL   \u2502 9          \u2502            60 \u2502\n\u2502 Schenectady \u2502 RHEL   \u2502            \u2502           140 \u2502\n\u2502 Westport    \u2502        \u2502 9          \u2502            70 \u2502\n\u2502 Westport    \u2502        \u2502 2020.05.01 \u2502             5 \u2502\n\u2502 Westport    \u2502        \u2502 2022.08.05 \u2502            40 \u2502\n\u2502 Westport    \u2502        \u2502 7          \u2502            80 \u2502\n\u2502 Westport    \u2502        \u2502 2021.09.01 \u2502            20 \u2502\n\u2502 Westport    \u2502        \u2502            \u2502           215 \u2502\n\u2502 Westport    \u2502 Arch   \u2502 2020.05.01 \u2502             5 \u2502\n\u2502 Westport    \u2502 Arch   \u2502 2021.09.01 \u2502            20 \u2502\n\u2502 Westport    \u2502 Arch   \u2502 2022.08.05 \u2502            40 \u2502\n\u2502 Westport    \u2502 Arch   \u2502            \u2502            65 \u2502\n\u2502 Westport    \u2502 RHEL   \u2502 9          \u2502            70 \u2502\n\u2502 Westport    \u2502 RHEL   \u2502 7          \u2502            80 \u2502\n\u2502 Westport    \u2502 RHEL   \u2502            \u2502           150 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n39 rows in set. Elapsed: 0.355 sec. \n")),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Version in the above example may not make sense when it is not associated with a distro, if we were tracking the kernel version it might make sense because the kernel version can be associated with either distro.  Using GROUPING SETS, as in the next example, may be a better choice."))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    datacenter,\n    distro,\n    version,\n    SUM(quantity)\nFROM servers\nGROUP BY\n    GROUPING SETS (\n        (datacenter, distro, version),\n        (datacenter, distro))\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500datacenter\u2500\u2500\u252c\u2500distro\u2500\u252c\u2500version\u2500\u2500\u2500\u2500\u252c\u2500sum(quantity)\u2500\u2510\n\u2502 Westport    \u2502 RHEL   \u2502 9          \u2502            70 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502 2022.08.05 \u2502            50 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502 2021.09.01 \u2502            30 \u2502\n\u2502 Schenectady \u2502 RHEL   \u2502 7          \u2502            80 \u2502\n\u2502 Westport    \u2502 Arch   \u2502 2020.05.01 \u2502             5 \u2502\n\u2502 Westport    \u2502 RHEL   \u2502 7          \u2502            80 \u2502\n\u2502 Westport    \u2502 Arch   \u2502 2021.09.01 \u2502            20 \u2502\n\u2502 Westport    \u2502 Arch   \u2502 2022.08.05 \u2502            40 \u2502\n\u2502 Schenectady \u2502 RHEL   \u2502 9          \u2502            60 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502 2020.05.01 \u2502            10 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u250c\u2500datacenter\u2500\u2500\u252c\u2500distro\u2500\u252c\u2500version\u2500\u252c\u2500sum(quantity)\u2500\u2510\n\u2502 Schenectady \u2502 RHEL   \u2502         \u2502           140 \u2502\n\u2502 Westport    \u2502 Arch   \u2502         \u2502            65 \u2502\n\u2502 Schenectady \u2502 Arch   \u2502         \u2502            90 \u2502\n\u2502 Westport    \u2502 RHEL   \u2502         \u2502           150 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n14 rows in set. Elapsed: 1.036 sec. \n")))}m.isMDXComponent=!0}}]);