"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[91189],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),d=a,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||i;return t?r.createElement(f,o(o({ref:n},u),{},{components:t})):r.createElement(f,o({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},66414:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return m}});var r=t(87462),a=t(63366),i=(t(67294),t(3905)),o=["components"],l={sidebar_position:56,sidebar_label:"Domains"},s="Domains",c={unversionedId:"en/reference/sql-reference/data-types/domains/index",id:"en/reference/sql-reference/data-types/domains/index",title:"Domains",description:"domains}",source:"@site/docs/en/reference/sql-reference/data-types/domains/index.md",sourceDirName:"en/reference/sql-reference/data-types/domains",slug:"/en/reference/sql-reference/data-types/domains/",permalink:"/en/reference/sql-reference/data-types/domains/",editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/reference/sql-reference/data-types/domains/index.md",tags:[],version:"current",sidebarPosition:56,frontMatter:{sidebar_position:56,sidebar_label:"Domains"},sidebar:"english",previous:{title:"Interval",permalink:"/en/reference/sql-reference/data-types/special-data-types/interval"},next:{title:"IPv4",permalink:"/en/reference/sql-reference/data-types/domains/ipv4"}},u={},m=[{value:"Extra Features of Domains",id:"extra-features-of-domains",level:3},{value:"Limitations",id:"limitations",level:3}],p={toc:m};function d(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"domains"},"Domains"),(0,i.kt)("p",null,"Domains are special-purpose types that add some extra features atop of existing base type, but leaving on-wire and on-disc format of the underlying data type intact. At the moment, ClickHouse does not support user-defined domains."),(0,i.kt)("p",null,"You can use domains anywhere corresponding base type can be used, for example:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Create a column of a domain type"),(0,i.kt)("li",{parentName:"ul"},"Read/write values from/to domain column"),(0,i.kt)("li",{parentName:"ul"},"Use it as an index if a base type can be used as an index"),(0,i.kt)("li",{parentName:"ul"},"Call functions with values of domain column")),(0,i.kt)("h3",{id:"extra-features-of-domains"},"Extra Features of Domains"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Explicit column type name in ",(0,i.kt)("inlineCode",{parentName:"li"},"SHOW CREATE TABLE")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"DESCRIBE TABLE")),(0,i.kt)("li",{parentName:"ul"},"Input from human-friendly format with ",(0,i.kt)("inlineCode",{parentName:"li"},"INSERT INTO domain_table(domain_column) VALUES(...)")),(0,i.kt)("li",{parentName:"ul"},"Output to human-friendly format for ",(0,i.kt)("inlineCode",{parentName:"li"},"SELECT domain_column FROM domain_table")),(0,i.kt)("li",{parentName:"ul"},"Loading data from an external source in the human-friendly format: ",(0,i.kt)("inlineCode",{parentName:"li"},"INSERT INTO domain_table FORMAT CSV ..."))),(0,i.kt)("h3",{id:"limitations"},"Limitations"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Can\u2019t convert index column of base type to domain type via ",(0,i.kt)("inlineCode",{parentName:"li"},"ALTER TABLE"),"."),(0,i.kt)("li",{parentName:"ul"},"Can\u2019t implicitly convert string values into domain values when inserting data from another column or table."),(0,i.kt)("li",{parentName:"ul"},"Domain adds no constrains on stored values.")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/data_types/domains/"},"Original article")," "))}d.isMDXComponent=!0}}]);