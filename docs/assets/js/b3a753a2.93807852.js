"use strict";(self.webpackChunknew_nav_docusaurus_2_2=self.webpackChunknew_nav_docusaurus_2_2||[]).push([[22977],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(a),c=i,g=u["".concat(s,".").concat(c)]||u[c]||m[c]||r;return a?n.createElement(g,o(o({ref:t},d),{},{components:a})):n.createElement(g,o({ref:t},d))}));function g(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,o=new Array(r);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},20488:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var n=a(87462),i=(a(67294),a(3905));const r={slug:"/en/guides/developer/mutations",sidebar_label:"Updating and Deleting Data",sidebar_position:1,keywords:["update","delete","mutation"]},o="Updating and Deleting ClickHouse Data",l={unversionedId:"en/guides/developer/mutations",id:"en/guides/developer/mutations",title:"Updating and Deleting ClickHouse Data",description:'Although ClickHouse is geared toward high volume analytic workloads, it is possible in some situations to modify or delete existing data.  These operations are labeled "mutations" and are executed using the ALTER TABLE command. You can also DELETE a row using the lightweight',source:"@site/docs/en/guides/developer/mutations.md",sourceDirName:"en/guides/developer",slug:"/en/guides/developer/mutations",permalink:"/docs/en/guides/developer/mutations",draft:!1,editUrl:"https://github.com/ClickHouse/clickhouse-docs/blob/main/docs/en/guides/developer/mutations.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/en/guides/developer/mutations",sidebar_label:"Updating and Deleting Data",sidebar_position:1,keywords:["update","delete","mutation"]},sidebar:"docs",previous:{title:"SELECT Queries",permalink:"/docs/en/guides/writing-queries"},next:{title:"Joining Tables",permalink:"/docs/en/guides/joining-tables"}},s={},p=[{value:"Updating Data",id:"updating-data",level:2},{value:"Deleting Data",id:"deleting-data",level:2},{value:"Lightweight Deletes",id:"lightweight-deletes",level:2}],d={toc:p},u="wrapper";function m(e){let{components:t,...a}=e;return(0,i.kt)(u,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"updating-and-deleting-clickhouse-data"},"Updating and Deleting ClickHouse Data"),(0,i.kt)("p",null,'Although ClickHouse is geared toward high volume analytic workloads, it is possible in some situations to modify or delete existing data.  These operations are labeled "mutations" and are executed using the ',(0,i.kt)("inlineCode",{parentName:"p"},"ALTER TABLE")," command. You can also ",(0,i.kt)("inlineCode",{parentName:"p"},"DELETE")," a row using the lightweight\ndelete capability of ClickHouse."),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"If you need to perform frequent updates, consider using ",(0,i.kt)("a",{parentName:"p",href:"/docs/en/guides/developer/deduplication"},"deduplication")," in ClickHouse, which allows you to update and/or delete rows without generating a mutation event.")),(0,i.kt)("h2",{id:"updating-data"},"Updating Data"),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ALTER TABLE...UPDATE")," command to update rows in a table:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE [<database>.]<table> UPDATE <column> = <expression> WHERE <filter_expr>\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"<expression>")," is the new value for the column where the ",(0,i.kt)("inlineCode",{parentName:"p"},"<filter_expr>")," is satisfied.  The ",(0,i.kt)("inlineCode",{parentName:"p"},"<expression>")," must be the same datatype as the column or be convertable to the same datatype using the ",(0,i.kt)("inlineCode",{parentName:"p"},"CAST")," operator.  The ",(0,i.kt)("inlineCode",{parentName:"p"},"<filter_expr>")," should return a ",(0,i.kt)("inlineCode",{parentName:"p"},"UInt8")," (zero or non-zero) value for each row of the data.  Multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"UPDATE <column>")," statements can be combined in a single ",(0,i.kt)("inlineCode",{parentName:"p"},"ALTER TABLE")," command separated by commas."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Examples"),":"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"A mutation like this allows updating replacing ",(0,i.kt)("inlineCode",{parentName:"p"},"visitor_ids")," with new ones using a dictionary lookup:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE website.clicks\nUPDATE visitor_id = getDict('visitors', 'new_visitor_id', visitor_id)\nWHERE visit_date < '2022-01-01'\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Modifying multiple values in one command can be more efficient than multiple commands:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE website.clicks\nUPDATE url = substring(url, position(url, '://') + 3), visitor_id = new_visit_id\nWHERE visit_date < '2022-01-01'\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Mutations can be exectuted ",(0,i.kt)("inlineCode",{parentName:"p"},"ON CLUSTER")," for sharded tables:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE clicks ON CLUSTER main_cluster\nUPDATE click_count = click_count / 2\nWHERE visitor_id ILIKE '%robot%'\n")))),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"It is not possible to update columns that are part of the primary or sorting key.")),(0,i.kt)("h2",{id:"deleting-data"},"Deleting Data"),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ALTER TABLE")," command to delete rows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE [<database>.]<table> DELETE WHERE <filter_expr>\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"<filter_expr>")," should return a UInt8 value for each row of data."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Examples")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Delete any records where a column is in an array of values:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE website.clicks DELETE WHERE visitor_id in (253, 1002, 4277)\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"What does this query alter?"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"ALTER TABLE clicks ON CLUSTER main_cluster WHERE visit_date < '2022-01-02 15:00:00' AND page_id = '573'\n")))),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"To delete all of the data in a table, it is more efficient to use the command ",(0,i.kt)("inlineCode",{parentName:"p"},"TRUNCATE TABLE [<database].]<table>")," command.  This command can also be executed ",(0,i.kt)("inlineCode",{parentName:"p"},"ON CLUSTER"),".")),(0,i.kt)("p",null,"View the ",(0,i.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/statements/delete"},(0,i.kt)("inlineCode",{parentName:"a"},"DELETE")," statement")," docs page for more details."),(0,i.kt)("h2",{id:"lightweight-deletes"},"Lightweight Deletes"),(0,i.kt)("p",null,"Another option for deleting rows it to use the ",(0,i.kt)("inlineCode",{parentName:"p"},"DELETE FROM")," command, which is referred to as a ",(0,i.kt)("strong",{parentName:"p"},"lightweight delete"),". The deleted rows are marked as deleted immediately and will be automatically filtered out of all subsequent queries, so you do not have to wait for a merging of parts or use the ",(0,i.kt)("inlineCode",{parentName:"p"},"FINAL")," keyword. Cleanup of data happens asynchronously in the background."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"DELETE FROM [db.]table [ON CLUSTER cluster] [WHERE expr]\n")),(0,i.kt)("p",null,"For example, the following query deletes all rows from the ",(0,i.kt)("inlineCode",{parentName:"p"},"hits")," table where the ",(0,i.kt)("inlineCode",{parentName:"p"},"Title")," column contains the text ",(0,i.kt)("inlineCode",{parentName:"p"},"hello"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"DELETE FROM hits WHERE Title LIKE '%hello%';\n")),(0,i.kt)("p",null,"A few notes about lightweight deletes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"This feature is only available for the ",(0,i.kt)("inlineCode",{parentName:"li"},"MergeTree")," table engine family."),(0,i.kt)("li",{parentName:"ul"},"Lightweight deletes are asynchronous by default. Set ",(0,i.kt)("inlineCode",{parentName:"li"},"mutations_sync")," equal to 1 to wait for one replica to process the statement, and set ",(0,i.kt)("inlineCode",{parentName:"li"},"mutations_sync")," to 2 to wait for all replicas."),(0,i.kt)("li",{parentName:"ul"},"This feature is experimental and requires you to set ",(0,i.kt)("inlineCode",{parentName:"li"},"allow_experimental_lightweight_delete")," to true:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SET allow_experimental_lightweight_delete = true;\n")))}m.isMDXComponent=!0}}]);