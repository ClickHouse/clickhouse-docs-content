"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[73532],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),c=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),g=c(n),d=r,m=g["".concat(o,".").concat(d)]||g[d]||p[d]||l;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=g;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},74001:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var a=n(87462),r=(n(67294),n(3905));const l={slug:"/en/engines/table-engines/integrations/deltalake",sidebar_label:"DeltaLake"},i="DeltaLake Table Engine",s={unversionedId:"en/engines/table-engines/integrations/deltalake",id:"en/engines/table-engines/integrations/deltalake",title:"DeltaLake Table Engine",description:"This engine provides a read-only integration with existing Delta Lake tables in Amazon S3.",source:"@site/docs/en/engines/table-engines/integrations/deltalake.md",sourceDirName:"en/engines/table-engines/integrations",slug:"/en/engines/table-engines/integrations/deltalake",permalink:"/docs/en/engines/table-engines/integrations/deltalake",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/engines/table-engines/integrations/deltalake.md",tags:[],version:"current",frontMatter:{slug:"/en/engines/table-engines/integrations/deltalake",sidebar_label:"DeltaLake"},sidebar:"english",previous:{title:"NATS",permalink:"/docs/en/engines/table-engines/integrations/nats"},next:{title:"Hudi",permalink:"/docs/en/engines/table-engines/integrations/hudi"}},o={},c=[{value:"Create Table",id:"create-table",level:2},{value:"See also",id:"see-also",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"deltalake-table-engine"},"DeltaLake Table Engine"),(0,r.kt)("p",null,"This engine provides a read-only integration with existing ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/delta-io/delta"},"Delta Lake")," tables in Amazon S3."),(0,r.kt)("h2",{id:"create-table"},"Create Table"),(0,r.kt)("p",null,"Note that the Delta Lake table must already exist in S3, this command does not take DDL parameters to create a new table."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE deltalake\n    ENGINE = DeltaLake(url, [aws_access_key_id, aws_secret_access_key,])\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Engine parameters")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"url")," \u2014 Bucket url with path to the existing Delta Lake table."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"aws_access_key_id"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"aws_secret_access_key")," - Long-term credentials for the ",(0,r.kt)("a",{parentName:"li",href:"https://aws.amazon.com/"},"AWS")," account user.  You can use these to authenticate your requests. Parameter is optional. If credentials are not specified, they are used from the configuration file. For more information see ",(0,r.kt)("a",{parentName:"li",href:"/docs/en/engines/table-engines/mergetree-family/mergetree#table_engine-mergetree-s3"},"Using S3 for Data Storage"),".")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE deltalake ENGINE=DeltaLake('http://mars-doc-test.s3.amazonaws.com/clickhouse-bucket-3/test_table/', 'ABC123', 'Abc+123')\n")),(0,r.kt)("h2",{id:"see-also"},"See also"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/table-functions/deltalake"},"deltaLake table function"))))}p.isMDXComponent=!0}}]);