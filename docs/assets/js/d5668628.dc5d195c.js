"use strict";(self.webpackChunknew_nav_docusaurus_2_2=self.webpackChunknew_nav_docusaurus_2_2||[]).push([[17348],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>g});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(t),u=r,g=p["".concat(s,".").concat(u)]||p[u]||m[u]||o;return t?a.createElement(g,l(l({ref:n},d),{},{components:t})):a.createElement(g,l({ref:n},d))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},43956:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(87462),r=(t(67294),t(3905));const o={slug:"/en/getting-started/example-datasets/covid19",sidebar_label:"COVID-19 Open-Data"},l="COVID-19 Open-Data",i={unversionedId:"en/getting-started/example-datasets/covid19",id:"en/getting-started/example-datasets/covid19",title:"COVID-19 Open-Data",description:"COVID-19 Open-Data attempts to assemble the largest Covid-19 epidemiological database, in addition to a powerful set of expansive covariates. It includes open, publicly sourced, licensed data relating to demographics, economy, epidemiology, geography, health, hospitalizations, mobility, government response, weather, and more.",source:"@site/docs/en/getting-started/example-datasets/covid19.md",sourceDirName:"en/getting-started/example-datasets",slug:"/en/getting-started/example-datasets/covid19",permalink:"/docs/en/getting-started/example-datasets/covid19",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/getting-started/example-datasets/covid19.md",tags:[],version:"current",frontMatter:{slug:"/en/getting-started/example-datasets/covid19",sidebar_label:"COVID-19 Open-Data"},sidebar:"docs",previous:{title:"Brown University Benchmark",permalink:"/docs/en/getting-started/example-datasets/brown-benchmark"},next:{title:"Terabyte Click Logs from Criteo",permalink:"/docs/en/getting-started/example-datasets/criteo"}},s={},c=[],d={toc:c},p="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"covid-19-open-data"},"COVID-19 Open-Data"),(0,r.kt)("p",null,"COVID-19 Open-Data attempts to assemble the largest Covid-19 epidemiological database, in addition to a powerful set of expansive covariates. It includes open, publicly sourced, licensed data relating to demographics, economy, epidemiology, geography, health, hospitalizations, mobility, government response, weather, and more."),(0,r.kt)("p",null,"The details are in GitHub ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/GoogleCloudPlatform/covid-19-open-data"},"here"),"."),(0,r.kt)("p",null,"It's easy to insert this data into ClickHouse..."),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The following commands were executed on a ",(0,r.kt)("strong",{parentName:"p"},"Production")," instance of ",(0,r.kt)("a",{parentName:"p",href:"https://clickhouse.cloud"},"ClickHouse Cloud"),". You can easily run them on a local install as well.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Let's see what the data looks like:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DESCRIBE url(\n    'https://storage.googleapis.com/covid19-open-data/v3/epidemiology.csv',\n    'CSVWithNames'\n);\n")),(0,r.kt)("p",null,"The CSV file has 10 columns:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500name\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500type\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 date                 \u2502 Nullable(String) \u2502\n\u2502 location_key         \u2502 Nullable(String) \u2502\n\u2502 new_confirmed        \u2502 Nullable(Int64)  \u2502\n\u2502 new_deceased         \u2502 Nullable(Int64)  \u2502\n\u2502 new_recovered        \u2502 Nullable(Int64)  \u2502\n\u2502 new_tested           \u2502 Nullable(Int64)  \u2502\n\u2502 cumulative_confirmed \u2502 Nullable(Int64)  \u2502\n\u2502 cumulative_deceased  \u2502 Nullable(Int64)  \u2502\n\u2502 cumulative_recovered \u2502 Nullable(Int64)  \u2502\n\u2502 cumulative_tested    \u2502 Nullable(Int64)  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n10 rows in set. Elapsed: 0.745 sec.\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Now let's view some of the rows:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT *\nFROM url('https://storage.googleapis.com/covid19-open-data/v3/epidemiology.csv')\nLIMIT 100;\n")),(0,r.kt)("p",null,"Notice the ",(0,r.kt)("inlineCode",{parentName:"p"},"url")," function easily reads data from a CSV file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500c1\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500c2\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500c3\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500c4\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500c5\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500c6\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500c7\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500c8\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500c9\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500c10\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 date       \u2502 location_key \u2502 new_confirmed \u2502 new_deceased \u2502 new_recovered \u2502 new_tested \u2502 cumulative_confirmed \u2502 cumulative_deceased \u2502 cumulative_recovered \u2502 cumulative_tested \u2502\n\u2502 2020-04-03 \u2502 AD           \u2502 24            \u2502 1            \u2502 \u1d3a\u1d41\u1d38\u1d38          \u2502 \u1d3a\u1d41\u1d38\u1d38       \u2502 466                  \u2502 17                  \u2502 \u1d3a\u1d41\u1d38\u1d38                 \u2502 \u1d3a\u1d41\u1d38\u1d38              \u2502\n\u2502 2020-04-04 \u2502 AD           \u2502 57            \u2502 0            \u2502 \u1d3a\u1d41\u1d38\u1d38          \u2502 \u1d3a\u1d41\u1d38\u1d38       \u2502 523                  \u2502 17                  \u2502 \u1d3a\u1d41\u1d38\u1d38                 \u2502 \u1d3a\u1d41\u1d38\u1d38              \u2502\n\u2502 2020-04-05 \u2502 AD           \u2502 17            \u2502 4            \u2502 \u1d3a\u1d41\u1d38\u1d38          \u2502 \u1d3a\u1d41\u1d38\u1d38       \u2502 540                  \u2502 21                  \u2502 \u1d3a\u1d41\u1d38\u1d38                 \u2502 \u1d3a\u1d41\u1d38\u1d38              \u2502\n\u2502 2020-04-06 \u2502 AD           \u2502 11            \u2502 1            \u2502 \u1d3a\u1d41\u1d38\u1d38          \u2502 \u1d3a\u1d41\u1d38\u1d38       \u2502 551                  \u2502 22                  \u2502 \u1d3a\u1d41\u1d38\u1d38                 \u2502 \u1d3a\u1d41\u1d38\u1d38              \u2502\n\u2502 2020-04-07 \u2502 AD           \u2502 15            \u2502 2            \u2502 \u1d3a\u1d41\u1d38\u1d38          \u2502 \u1d3a\u1d41\u1d38\u1d38       \u2502 566                  \u2502 24                  \u2502 \u1d3a\u1d41\u1d38\u1d38                 \u2502 \u1d3a\u1d41\u1d38\u1d38              \u2502\n\u2502 2020-04-08 \u2502 AD           \u2502 23            \u2502 2            \u2502 \u1d3a\u1d41\u1d38\u1d38          \u2502 \u1d3a\u1d41\u1d38\u1d38       \u2502 589                  \u2502 26                  \u2502 \u1d3a\u1d41\u1d38\u1d38                 \u2502 \u1d3a\u1d41\u1d38\u1d38              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"We will create a table now that we know what the data looks like:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE covid19 (\n    date Date,\n    location_key LowCardinality(String),\n    new_confirmed Int32,\n    new_deceased Int32,\n    new_recovered Int32,\n    new_tested Int32,\n    cumulative_confirmed Int32,\n    cumulative_deceased Int32,\n    cumulative_recovered Int32,\n    cumulative_tested Int32\n)\nENGINE = MergeTree\nORDER BY (location_key, date);\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"The following command inserts the entire dataset into the ",(0,r.kt)("inlineCode",{parentName:"li"},"covid19")," table:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO covid19\n   SELECT *\n   FROM\n      url(\n        'https://storage.googleapis.com/covid19-open-data/v3/epidemiology.csv',\n        CSVWithNames,\n        'date Date,\n        location_key LowCardinality(String),\n        new_confirmed Int32,\n        new_deceased Int32,\n        new_recovered Int32,\n        new_tested Int32,\n        cumulative_confirmed Int32,\n        cumulative_deceased Int32,\n        cumulative_recovered Int32,\n        cumulative_tested Int32'\n    );\n")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"It goes pretty quick - let's see how many rows were inserted:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT formatReadableQuantity(count())\nFROM covid19;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500formatReadableQuantity(count())\u2500\u2510\n\u2502 12.53 million                   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"Let's see how many total cases of Covid-19 were recorded:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT formatReadableQuantity(sum(new_confirmed))\nFROM covid19;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500formatReadableQuantity(sum(new_confirmed))\u2500\u2510\n\u2502 1.39 billion                               \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},"You will notice the data has a lot of 0's for dates - either weekends or days where numbers were not reported each day. We can use a window function to smooth out the daily averages of new cases:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n   AVG(new_confirmed) OVER (PARTITION BY location_key ORDER BY date ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING) AS cases_smoothed,\n   new_confirmed,\n   location_key,\n   date\nFROM covid19;\n")),(0,r.kt)("ol",{start:8},(0,r.kt)("li",{parentName:"ol"},"This query determines the latest values for each location. We can't use ",(0,r.kt)("inlineCode",{parentName:"li"},"max(date)")," because not all countries reported every day, so we grab the last row using ",(0,r.kt)("inlineCode",{parentName:"li"},"ROW_NUMBER"),":")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"WITH latest_deaths_data AS\n   ( SELECT location_key,\n            date,\n            new_deceased,\n            new_confirmed,\n            ROW_NUMBER() OVER (PARTITION BY location_key ORDER BY date DESC) as rn\n     FROM covid19)\nSELECT location_key,\n       date,\n       new_deceased,\n       new_confirmed,\n       rn\nFROM latest_deaths_data\nWHERE rn=1;\n")),(0,r.kt)("ol",{start:9},(0,r.kt)("li",{parentName:"ol"},"We can use ",(0,r.kt)("inlineCode",{parentName:"li"},"lagInFrame")," to determine the ",(0,r.kt)("inlineCode",{parentName:"li"},"LAG")," of new cases each day. In this query we filter by the ",(0,r.kt)("inlineCode",{parentName:"li"},"US_DC")," location:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n   new_confirmed - lagInFrame(new_confirmed,1) OVER (PARTITION BY location_key ORDER BY date) AS confirmed_cases_delta,\n   new_confirmed,\n   location_key,\n   date\nFROM covid19\nWHERE location_key = 'US_DC';\n")),(0,r.kt)("p",null,"The response look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500confirmed_cases_delta\u2500\u252c\u2500new_confirmed\u2500\u252c\u2500location_key\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500date\u2500\u2510\n\u2502                     0 \u2502             0 \u2502 US_DC        \u2502 2020-03-08 \u2502\n\u2502                     2 \u2502             2 \u2502 US_DC        \u2502 2020-03-09 \u2502\n\u2502                    -2 \u2502             0 \u2502 US_DC        \u2502 2020-03-10 \u2502\n\u2502                     6 \u2502             6 \u2502 US_DC        \u2502 2020-03-11 \u2502\n\u2502                    -6 \u2502             0 \u2502 US_DC        \u2502 2020-03-12 \u2502\n\u2502                     0 \u2502             0 \u2502 US_DC        \u2502 2020-03-13 \u2502\n\u2502                     6 \u2502             6 \u2502 US_DC        \u2502 2020-03-14 \u2502\n\u2502                    -5 \u2502             1 \u2502 US_DC        \u2502 2020-03-15 \u2502\n\u2502                     4 \u2502             5 \u2502 US_DC        \u2502 2020-03-16 \u2502\n\u2502                     4 \u2502             9 \u2502 US_DC        \u2502 2020-03-17 \u2502\n\u2502                    -1 \u2502             8 \u2502 US_DC        \u2502 2020-03-18 \u2502\n\u2502                    24 \u2502            32 \u2502 US_DC        \u2502 2020-03-19 \u2502\n\u2502                   -26 \u2502             6 \u2502 US_DC        \u2502 2020-03-20 \u2502\n\u2502                    15 \u2502            21 \u2502 US_DC        \u2502 2020-03-21 \u2502\n\u2502                    -3 \u2502            18 \u2502 US_DC        \u2502 2020-03-22 \u2502\n\u2502                     3 \u2502            21 \u2502 US_DC        \u2502 2020-03-23 \u2502\n")),(0,r.kt)("ol",{start:10},(0,r.kt)("li",{parentName:"ol"},"This query calculates the percentage of change in new cases each day, and includes a simple ",(0,r.kt)("inlineCode",{parentName:"li"},"increase")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"decrease")," column in the result set:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"WITH confirmed_lag AS (\n  SELECT\n    *,\n    lagInFrame(new_confirmed) OVER(\n      PARTITION BY location_key\n      ORDER BY date\n    ) AS confirmed_previous_day\n  FROM covid19\n),\nconfirmed_percent_change AS (\n  SELECT\n    *,\n    COALESCE(ROUND((new_confirmed - confirmed_previous_day) / confirmed_previous_day * 100), 0) AS percent_change\n  FROM confirmed_lag\n)\nSELECT\n  date,\n  new_confirmed,\n  percent_change,\n  CASE\n    WHEN percent_change > 0 THEN 'increase'\n    WHEN percent_change = 0 THEN 'no change'\n    ELSE 'decrease'\n  END AS trend\nFROM confirmed_percent_change\nWHERE location_key = 'US_DC';\n")),(0,r.kt)("p",null,"The results look like"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500date\u2500\u252c\u2500new_confirmed\u2500\u252c\u2500percent_change\u2500\u252c\u2500trend\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 2020-03-08 \u2502             0 \u2502            nan \u2502 decrease  \u2502\n\u2502 2020-03-09 \u2502             2 \u2502            inf \u2502 increase  \u2502\n\u2502 2020-03-10 \u2502             0 \u2502           -100 \u2502 decrease  \u2502\n\u2502 2020-03-11 \u2502             6 \u2502            inf \u2502 increase  \u2502\n\u2502 2020-03-12 \u2502             0 \u2502           -100 \u2502 decrease  \u2502\n\u2502 2020-03-13 \u2502             0 \u2502            nan \u2502 decrease  \u2502\n\u2502 2020-03-14 \u2502             6 \u2502            inf \u2502 increase  \u2502\n\u2502 2020-03-15 \u2502             1 \u2502            -83 \u2502 decrease  \u2502\n\u2502 2020-03-16 \u2502             5 \u2502            400 \u2502 increase  \u2502\n\u2502 2020-03-17 \u2502             9 \u2502             80 \u2502 increase  \u2502\n\u2502 2020-03-18 \u2502             8 \u2502            -11 \u2502 decrease  \u2502\n\u2502 2020-03-19 \u2502            32 \u2502            300 \u2502 increase  \u2502\n\u2502 2020-03-20 \u2502             6 \u2502            -81 \u2502 decrease  \u2502\n\u2502 2020-03-21 \u2502            21 \u2502            250 \u2502 increase  \u2502\n\u2502 2020-03-22 \u2502            18 \u2502            -14 \u2502 decrease  \u2502\n\u2502 2020-03-23 \u2502            21 \u2502             17 \u2502 increase  \u2502\n\u2502 2020-03-24 \u2502            46 \u2502            119 \u2502 increase  \u2502\n\u2502 2020-03-25 \u2502            48 \u2502              4 \u2502 increase  \u2502\n\u2502 2020-03-26 \u2502            36 \u2502            -25 \u2502 decrease  \u2502\n\u2502 2020-03-27 \u2502            37 \u2502              3 \u2502 increase  \u2502\n\u2502 2020-03-28 \u2502            38 \u2502              3 \u2502 increase  \u2502\n\u2502 2020-03-29 \u2502            59 \u2502             55 \u2502 increase  \u2502\n\u2502 2020-03-30 \u2502            94 \u2502             59 \u2502 increase  \u2502\n\u2502 2020-03-31 \u2502            91 \u2502             -3 \u2502 decrease  \u2502\n\u2502 2020-04-01 \u2502            67 \u2502            -26 \u2502 decrease  \u2502\n\u2502 2020-04-02 \u2502           104 \u2502             55 \u2502 increase  \u2502\n\u2502 2020-04-03 \u2502           145 \u2502             39 \u2502 increase  \u2502\n")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"As mentioned in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/GoogleCloudPlatform/covid-19-open-data"},"GitHub repo"),", the datset is no longer updated as of September 15, 2022.")))}m.isMDXComponent=!0}}]);