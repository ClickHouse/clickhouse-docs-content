"use strict";(self.webpackChunknew_nav_docusaurus_2_2=self.webpackChunknew_nav_docusaurus_2_2||[]).push([[91418],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>f});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(a),d=r,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||i;return a?n.createElement(f,o(o({ref:t},u),{},{components:a})):n.createElement(f,o({ref:t},u))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},4655:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const i={sidebar_label:"Parquet",sidebar_position:3,slug:"/en/integrations/data-formats/parquet"},o="Working with Parquet in ClickHouse",l={unversionedId:"en/integrations/data-ingestion/data-formats/parquet",id:"en/integrations/data-ingestion/data-formats/parquet",title:"Working with Parquet in ClickHouse",description:"Parquet is an efficient file format to store data in a column-oriented way.",source:"@site/docs/en/integrations/data-ingestion/data-formats/parquet.md",sourceDirName:"en/integrations/data-ingestion/data-formats",slug:"/en/integrations/data-formats/parquet",permalink:"/docs/en/integrations/data-formats/parquet",draft:!1,editUrl:"https://github.com/ClickHouse/clickhouse-docs/blob/main/docs/en/integrations/data-ingestion/data-formats/parquet.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"Parquet",sidebar_position:3,slug:"/en/integrations/data-formats/parquet"},sidebar:"docs",previous:{title:"JSON",permalink:"/docs/en/integrations/data-formats/json"},next:{title:"Avro, Arrow and ORC",permalink:"/docs/en/integrations/data-formats/arrow-avro-orc"}},s={},p=[{value:"Importing from Parquet",id:"importing-from-parquet",level:2},{value:"Importing to an existing table",id:"importing-to-an-existing-table",level:2},{value:"Creating new tables from parquet files",id:"creating-new-tables-from-parquet-files",level:2},{value:"Exporting to Parquet format",id:"exporting-to-parquet-format",level:2},{value:"ClickHouse and Parquet data types",id:"clickhouse-and-parquet-data-types",level:2},{value:"Further reading",id:"further-reading",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...i}=e;return(0,r.kt)(c,(0,n.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"working-with-parquet-in-clickhouse"},"Working with Parquet in ClickHouse"),(0,r.kt)("p",null,"Parquet is an efficient file format to store data in a column-oriented way."),(0,r.kt)("h2",{id:"importing-from-parquet"},"Importing from Parquet"),(0,r.kt)("p",null,"Before loading data, we can use ",(0,r.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/functions/files/#file"},"file()")," function to explore an ",(0,r.kt)("a",{target:"_blank",href:a(3890).Z},"example parquet file")," structure:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DESCRIBE TABLE file('data.parquet', Parquet)\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"When using the ",(0,r.kt)("inlineCode",{parentName:"p"},"file()")," function, with ClickHouse Cloud you will need to run the commands in ",(0,r.kt)("inlineCode",{parentName:"p"},"clickhouse client")," on the machine where the file resides. Another option is to use ",(0,r.kt)("a",{parentName:"p",href:"/docs/en/operations/utilities/clickhouse-local"},(0,r.kt)("inlineCode",{parentName:"a"},"clickhouse-local"))," to explore files locally.")),(0,r.kt)("p",null,"We've used ",(0,r.kt)("a",{parentName:"p",href:"/docs/en/interfaces/formats/#data-format-parquet"},"Parquet")," as a second argument, so ClickHouse knows the file format. This will print columns with the types:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500name\u2500\u252c\u2500type\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500default_type\u2500\u252c\u2500default_expression\u2500\u252c\u2500comment\u2500\u252c\u2500codec_expression\u2500\u252c\u2500ttl_expression\u2500\u2510\n\u2502 path \u2502 Nullable(String) \u2502              \u2502                    \u2502         \u2502                  \u2502                \u2502\n\u2502 date \u2502 Nullable(String) \u2502              \u2502                    \u2502         \u2502                  \u2502                \u2502\n\u2502 hits \u2502 Nullable(Int64)  \u2502              \u2502                    \u2502         \u2502                  \u2502                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("p",null,"We can also explore files before actually importing data using all power of SQL:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT *\nFROM file('data.parquet', Parquet)\nLIMIT 3\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500path\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500date\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500hits\u2500\u2510\n\u2502 Akiba_Hebrew_Academy      \u2502 2017-08-01 \u2502  241 \u2502\n\u2502 Aegithina_tiphia          \u2502 2018-02-01 \u2502   34 \u2502\n\u2502 1971-72_Utah_Stars_season \u2502 2016-10-01 \u2502    1 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"We can skip explicit format setting for ",(0,r.kt)("inlineCode",{parentName:"p"},"file()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"INFILE"),"/",(0,r.kt)("inlineCode",{parentName:"p"},"OUTFILE"),".\nIn that case, ClickHouse will automatically detect format based on file extension.")),(0,r.kt)("h2",{id:"importing-to-an-existing-table"},"Importing to an existing table"),(0,r.kt)("p",null,"Let's create a table to import parquet data to:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE sometable\n(\n    `path` String,\n    `date` Date,\n    `hits` UInt32\n)\nENGINE = MergeTree\nORDER BY (date, path)\n")),(0,r.kt)("p",null,"Now we can import data using a ",(0,r.kt)("inlineCode",{parentName:"p"},"FROM INFILE")," clause:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO sometable\nFROM INFILE 'data.parquet' FORMAT Parquet;\n\nSELECT *\nFROM sometable\nLIMIT 5;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500path\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500date\u2500\u252c\u2500hits\u2500\u2510\n\u2502 1988_in_philosophy            \u2502 2015-05-01 \u2502   70 \u2502\n\u2502 2004_Green_Bay_Packers_season \u2502 2015-05-01 \u2502  970 \u2502\n\u2502 24_hours_of_lemans            \u2502 2015-05-01 \u2502   37 \u2502\n\u2502 25604_Karlin                  \u2502 2015-05-01 \u2502   20 \u2502\n\u2502 ASCII_ART                     \u2502 2015-05-01 \u2502    9 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("p",null,"Note how ClickHouse automatically converted parquet strings (in the ",(0,r.kt)("inlineCode",{parentName:"p"},"date")," column) to the ",(0,r.kt)("inlineCode",{parentName:"p"},"Date")," type. This is because ClickHouse does a typecast automatically based on the types in the target table."),(0,r.kt)("h2",{id:"creating-new-tables-from-parquet-files"},"Creating new tables from parquet files"),(0,r.kt)("p",null,"Since ClickHouse reads parquet file schema, we can create tables on the fly:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE imported_from_parquet\nENGINE = MergeTree\nORDER BY tuple() AS\nSELECT *\nFROM file('data.parquet', Parquet)\n")),(0,r.kt)("p",null,"This will automatically create and populate a table from a given parquet file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DESCRIBE TABLE imported_from_parquet;\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500name\u2500\u252c\u2500type\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500default_type\u2500\u252c\u2500default_expression\u2500\u252c\u2500comment\u2500\u252c\u2500codec_expression\u2500\u252c\u2500ttl_expression\u2500\u2510\n\u2502 path \u2502 Nullable(String) \u2502              \u2502                    \u2502         \u2502                  \u2502                \u2502\n\u2502 date \u2502 Nullable(String) \u2502              \u2502                    \u2502         \u2502                  \u2502                \u2502\n\u2502 hits \u2502 Nullable(Int64)  \u2502              \u2502                    \u2502         \u2502                  \u2502                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("p",null,"By default, ClickHouse is strict with column names, types, and values. But sometimes, we can skip unexistent columns or unsupported values during import. This can be managed with ",(0,r.kt)("a",{parentName:"p",href:"/docs/en/interfaces/formats/#parquet-format-settings"},"Parquet settings"),"."),(0,r.kt)("h2",{id:"exporting-to-parquet-format"},"Exporting to Parquet format"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"When using ",(0,r.kt)("inlineCode",{parentName:"p"},"INTO OUTFILE")," with ClickHouse Cloud you will need to run the commands in ",(0,r.kt)("inlineCode",{parentName:"p"},"clickhouse client")," on the machine where the file will be written to.")),(0,r.kt)("p",null,"To export any table or query result to the Parquet file, we can use an ",(0,r.kt)("inlineCode",{parentName:"p"},"INTO OUTFILE")," clause:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT *\nFROM sometable\nINTO OUTFILE 'export.parquet'\nFORMAT Parquet\n")),(0,r.kt)("p",null,"This will create the ",(0,r.kt)("inlineCode",{parentName:"p"},"export.parquet")," file in a working directory."),(0,r.kt)("h2",{id:"clickhouse-and-parquet-data-types"},"ClickHouse and Parquet data types"),(0,r.kt)("p",null,"ClickHouse and Parquet data types are mostly identical but still ",(0,r.kt)("a",{parentName:"p",href:"/docs/en/interfaces/formats/#data-types-matching-parquet"},"differ a bit"),". For example, ClickHouse will export ",(0,r.kt)("inlineCode",{parentName:"p"},"DateTime")," type as a Parquets' ",(0,r.kt)("inlineCode",{parentName:"p"},"int64"),". If we then import that back to ClickHouse, we're going to see numbers (",(0,r.kt)("a",{target:"_blank",href:a(80108).Z},"time.parquet file"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM file('time.parquet', Parquet);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500n\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500time\u2500\u2510\n\u2502 0 \u2502 1673622611 \u2502\n\u2502 1 \u2502 1673622610 \u2502\n\u2502 2 \u2502 1673622609 \u2502\n\u2502 3 \u2502 1673622608 \u2502\n\u2502 4 \u2502 1673622607 \u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("p",null,"In this case ",(0,r.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/functions/type-conversion-functions"},"type conversion")," can be used:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    n,\n    toDateTime(time)                 <--- int to time\nFROM file('time.parquet', Parquet);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500n\u2500\u252c\u2500\u2500\u2500\u2500toDateTime(time)\u2500\u2510\n\u2502 0 \u2502 2023-01-13 15:10:11 \u2502\n\u2502 1 \u2502 2023-01-13 15:10:10 \u2502\n\u2502 2 \u2502 2023-01-13 15:10:09 \u2502\n\u2502 3 \u2502 2023-01-13 15:10:08 \u2502\n\u2502 4 \u2502 2023-01-13 15:10:07 \u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,r.kt)("h2",{id:"further-reading"},"Further reading"),(0,r.kt)("p",null,"ClickHouse introduces support for many formats, both text, and binary, to cover various scenarios and platforms. Explore more formats and ways to work with them in the following articles:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/en/integrations/data-formats/csv-tsv"},"CSV and TSV formats")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/en/integrations/data-formats/arrow-avro-orc"},"Avro, Arrow and ORC")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/en/integrations/data-formats/json"},"JSON formats")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/en/integrations/data-formats/templates-regexp"},"Regex and templates")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/en/integrations/data-formats/binary-native"},"Native and binary formats")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/docs/en/integrations/data-formats/sql"},"SQL formats"))),(0,r.kt)("p",null,"And also check ",(0,r.kt)("a",{parentName:"p",href:"https://clickhouse.com/blog/extracting-converting-querying-local-files-with-sql-clickhouse-local"},"clickhouse-local")," - a portable full-featured tool to work on local/remote files without the need for Clickhouse server."))}m.isMDXComponent=!0},3890:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/data-afb67b42d91da5fef56d4de3d5ce6d73.parquet"},80108:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/time-c76d9f13086ac7bec7b861291d1494eb.parquet"}}]);