"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[78227],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return f}});var t=r(67294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=t.createContext({}),a=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},s=function(e){var n=a(e.components);return t.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=a(r),f=i,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||o;return r?t.createElement(m,l(l({ref:n},s),{},{components:r})):t.createElement(m,l({ref:n},s))}));function f(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,l=new Array(o);l[0]=d;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:i,l[1]=c;for(var a=2;a<o;a++)l[a]=r[a];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9696:function(e,n,r){r.r(n),r.d(n,{assets:function(){return s},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return c},metadata:function(){return a},toc:function(){return p}});var t=r(87462),i=r(63366),o=(r(67294),r(3905)),l=["components"],c={sidebar_position:68,sidebar_label:"Build on Linux for RISC-V 64"},u="How to Build ClickHouse on Linux for RISC-V 64 Architecture",a={unversionedId:"en/reference/development/build-cross-riscv",id:"en/reference/development/build-cross-riscv",title:"How to Build ClickHouse on Linux for RISC-V 64 Architecture",description:"As of writing (11.11.2021) building for risc-v considered to be highly experimental. Not all features can be enabled.",source:"@site/docs/en/reference/development/build-cross-riscv.md",sourceDirName:"en/reference/development",slug:"/en/reference/development/build-cross-riscv",permalink:"/en/reference/development/build-cross-riscv",editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/reference/development/build-cross-riscv.md",tags:[],version:"current",sidebarPosition:68,frontMatter:{sidebar_position:68,sidebar_label:"Build on Linux for RISC-V 64"},sidebar:"english",previous:{title:"Build on Linux for AARCH64 (ARM64)",permalink:"/en/reference/development/build-cross-arm"},next:{title:"C++ Guide",permalink:"/en/reference/development/style"}},s={},p=[{value:"Install Clang-13",id:"install-clang-13",level:2},{value:"Build ClickHouse",id:"build-clickhouse",level:2}],d={toc:p};function f(e){var n=e.components,r=(0,i.Z)(e,l);return(0,o.kt)("wrapper",(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"how-to-build-clickhouse-on-linux-for-risc-v-64-architecture"},"How to Build ClickHouse on Linux for RISC-V 64 Architecture"),(0,o.kt)("p",null,"As of writing (11.11.2021) building for risc-v considered to be highly experimental. Not all features can be enabled."),(0,o.kt)("p",null,"This is for the case when you have Linux machine and want to use it to build ",(0,o.kt)("inlineCode",{parentName:"p"},"clickhouse")," binary that will run on another Linux machine with RISC-V 64 CPU architecture. This is intended for continuous integration checks that run on Linux servers."),(0,o.kt)("p",null,"The cross-build for RISC-V 64 is based on the ",(0,o.kt)("a",{parentName:"p",href:"/en/reference/development/build"},"Build instructions"),", follow them first."),(0,o.kt)("h2",{id:"install-clang-13"},"Install Clang-13"),(0,o.kt)("p",null,"Follow the instructions from ",(0,o.kt)("a",{parentName:"p",href:"https://apt.llvm.org/"},"https://apt.llvm.org/")," for your Ubuntu or Debian setup or do"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"\n')),(0,o.kt)("h2",{id:"build-clickhouse"},"Build ClickHouse"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd ClickHouse\nmkdir build-riscv64\nCC=clang-13 CXX=clang++-13 cmake . -Bbuild-riscv64 -G Ninja -DCMAKE_TOOLCHAIN_FILE=cmake/linux/toolchain-riscv64.cmake -DGLIBC_COMPATIBILITY=OFF -DENABLE_LDAP=OFF  -DOPENSSL_NO_ASM=ON -DENABLE_JEMALLOC=ON -DENABLE_PARQUET=OFF -DENABLE_ORC=OFF -DUSE_UNWIND=OFF -DENABLE_GRPC=OFF -DENABLE_HDFS=OFF -DENABLE_MYSQL=OFF\nninja -C build-riscv64\n")),(0,o.kt)("p",null,"The resulting binary will run only on Linux with the RISC-V 64 CPU architecture."))}f.isMDXComponent=!0}}]);