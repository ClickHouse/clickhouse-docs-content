"use strict";(self.webpackChunknew_nav_docusaurus_2_2=self.webpackChunknew_nav_docusaurus_2_2||[]).push([[36432],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,k=c["".concat(l,".").concat(d)]||c[d]||u[d]||i;return n?a.createElement(k,o(o({ref:t},m),{},{components:n})):a.createElement(k,o({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},82253:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={sidebar_position:1,sidebar_label:"Creating Tables"},o="Creating Tables in ClickHouse",s={unversionedId:"en/guides/creating-tables",id:"en/guides/creating-tables",title:"Creating Tables in ClickHouse",description:"Like most database management systems, ClickHouse logically groups tables into databases. Use the CREATE DATABASE command to create a new database in ClickHouse:",source:"@site/docs/en/guides/creating-tables.md",sourceDirName:"en/guides",slug:"/en/guides/creating-tables",permalink:"/docs/en/guides/creating-tables",draft:!1,editUrl:"https://github.com/ClickHouse/clickhouse-docs/blob/main/docs/en/guides/creating-tables.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Creating Tables"},sidebar:"docs",previous:{title:"Why is ClickHouse unique?",permalink:"/docs/en/about-us/distinctive-features"},next:{title:"Inserting Data",permalink:"/docs/en/guides/inserting-data"}},l={},p=[],m={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"creating-tables-in-clickhouse"},"Creating Tables in ClickHouse"),(0,r.kt)("p",null," Like most database management systems, ClickHouse logically groups tables into ",(0,r.kt)("strong",{parentName:"p"},"databases"),". Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"CREATE DATABASE")," command to create a new database in ClickHouse:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE IF NOT EXISTS helloworld\n")),(0,r.kt)("p",null,"Similarly, use ",(0,r.kt)("inlineCode",{parentName:"p"},"CREATE TABLE")," to define a new table. (If you do not specify the database name, the table will be in the\n",(0,r.kt)("inlineCode",{parentName:"p"},"default")," database.) The following table named is ",(0,r.kt)("inlineCode",{parentName:"p"},"my_first_table")," in the ",(0,r.kt)("inlineCode",{parentName:"p"},"helloworld")," database:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE helloworld.my_first_table\n(\n    user_id UInt32,\n    message String,\n    timestamp DateTime,\n    metric Float32\n)\nENGINE = MergeTree()\nPRIMARY KEY (user_id, timestamp)\n")),(0,r.kt)("p",null,"In the example above, ",(0,r.kt)("inlineCode",{parentName:"p"},"my_first_table")," is a ",(0,r.kt)("inlineCode",{parentName:"p"},"MergeTree")," table with four columns:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"user_id"),":  a 32-bit unsigned integer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"message"),": a ",(0,r.kt)("inlineCode",{parentName:"p"},"String")," data type, which replaces types like ",(0,r.kt)("inlineCode",{parentName:"p"},"VARCHAR"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"BLOB"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"CLOB")," and others from other database systems")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"timestamp"),": a ",(0,r.kt)("inlineCode",{parentName:"p"},"DateTime")," value, which represents an instant in time")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"metric"),": a 32-bit floating point number"),(0,r.kt)("admonition",{parentName:"li",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The table engine determines:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"How and where the data is stored"),(0,r.kt)("li",{parentName:"ul"},"Which queries are supported"),(0,r.kt)("li",{parentName:"ul"},"Whether or not the data is replicated")),(0,r.kt)("p",{parentName:"admonition"},"There are many engines to choose from, but for a simple table on a single-node ClickHouse server, ",(0,r.kt)("a",{parentName:"p",href:"/docs/en/engines/table-engines/mergetree-family/mergetree"},"MergeTree")," is your likely choice.")),(0,r.kt)("h2",{parentName:"li",id:"a-brief-intro-to-primary-keys"},"A Brief Intro to Primary Keys"),(0,r.kt)("p",{parentName:"li"},"Before you go any further, it is important to understand how primary keys work in ClickHouse (the implementation\nof primary keys might seem unexpected!):"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"primary keys in ClickHouse are ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"not unique"))," for each row in a table")),(0,r.kt)("p",{parentName:"li"},"The primary key of a ClickHouse table determines how the data is sorted when written to disk. Every 8,192 rows or 10MB of\ndata (referred to as the ",(0,r.kt)("strong",{parentName:"p"},"index granularity"),") creates an entry in the primary key index file. This granularity concept\ncreates a ",(0,r.kt)("strong",{parentName:"p"},"sparse index")," that can easily fit in memory, and the granules represent a stripe of the smallest amount of\ncolumn data that gets processed during ",(0,r.kt)("inlineCode",{parentName:"p"},"SELECT")," queries."),(0,r.kt)("p",{parentName:"li"},"The primary key can be defined using the ",(0,r.kt)("inlineCode",{parentName:"p"},"PRIMARY KEY")," parameter. If you define a table without a ",(0,r.kt)("inlineCode",{parentName:"p"},"PRIMARY KEY")," specified,\nthen the key becomes the tuple specified in the ",(0,r.kt)("inlineCode",{parentName:"p"},"ORDER BY")," clause. If you specify both a ",(0,r.kt)("inlineCode",{parentName:"p"},"PRIMARY KEY ")," and an ",(0,r.kt)("inlineCode",{parentName:"p"},"ORDER BY"),", the primary key must be a subset of the sort order."),(0,r.kt)("p",{parentName:"li"},"The primary key is also the sorting key, which is a tuple of ",(0,r.kt)("inlineCode",{parentName:"p"},"(user_id, timestamp)"),".  Therefore, the data stored in each\ncolumn file will be sorted by ",(0,r.kt)("inlineCode",{parentName:"p"},"user_id"),", then ",(0,r.kt)("inlineCode",{parentName:"p"},"timestamp"),"."))),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For more details, check out the ",(0,r.kt)("a",{parentName:"p",href:"https://learn.clickhouse.com/visitor_catalog_class/show/1043458/"},"Creating Databases and Tables")," training course in ClickHouse Academy.")))}u.isMDXComponent=!0}}]);