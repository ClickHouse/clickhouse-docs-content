"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[55673],{3905:(e,n,r)=>{r.d(n,{Zo:()=>p,kt:()=>f});var t=r(67294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=t.createContext({}),s=function(e){var n=t.useContext(i),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},p=function(e){var n=s(e.components);return t.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(r),f=a,g=m["".concat(i,".").concat(f)]||m[f]||u[f]||o;return r?t.createElement(g,c(c({ref:n},p),{},{components:r})):t.createElement(g,c({ref:n},p))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=m;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var s=2;s<o;s++)c[s]=r[s];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},67729:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var t=r(87462),a=(r(67294),r(3905));const o={slug:"/en/sql-reference/aggregate-functions/reference/maxmap",sidebar_position:143},c="maxMap",l={unversionedId:"en/sql-reference/aggregate-functions/reference/maxmap",id:"en/sql-reference/aggregate-functions/reference/maxmap",title:"maxMap",description:"Syntax: maxMap(key, value) or maxMap(Tuple(key, value))",source:"@site/docs/en/sql-reference/aggregate-functions/reference/maxmap.md",sourceDirName:"en/sql-reference/aggregate-functions/reference",slug:"/en/sql-reference/aggregate-functions/reference/maxmap",permalink:"/docs/en/sql-reference/aggregate-functions/reference/maxmap",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/aggregate-functions/reference/maxmap.md",tags:[],version:"current",sidebarPosition:143,frontMatter:{slug:"/en/sql-reference/aggregate-functions/reference/maxmap",sidebar_position:143},sidebar:"english",previous:{title:"minMap",permalink:"/docs/en/sql-reference/aggregate-functions/reference/minmap"},next:{title:"sumCount",permalink:"/docs/en/sql-reference/aggregate-functions/reference/sumcount"}},i={},s=[],p={toc:s};function u(e){let{components:n,...r}=e;return(0,a.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"maxmap"},"maxMap"),(0,a.kt)("p",null,"Syntax: ",(0,a.kt)("inlineCode",{parentName:"p"},"maxMap(key, value)")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"maxMap(Tuple(key, value))")),(0,a.kt)("p",null,"Calculates the maximum from ",(0,a.kt)("inlineCode",{parentName:"p"},"value")," array according to the keys specified in the ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," array."),(0,a.kt)("p",null,"Passing a tuple of keys and value arrays is identical to passing two arrays of keys and values."),(0,a.kt)("p",null,"The number of elements in ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"value")," must be the same for each row that is totaled."),(0,a.kt)("p",null,"Returns a tuple of two arrays: keys and values calculated for the corresponding keys."),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT maxMap(a, b)\nFROM values('a Array(Int32), b Array(Int64)', ([1, 2], [2, 2]), ([2, 3], [1, 1]))\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500maxMap(a, b)\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 ([1,2,3],[2,2,1]) \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")))}u.isMDXComponent=!0}}]);