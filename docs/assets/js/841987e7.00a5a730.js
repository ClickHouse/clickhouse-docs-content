"use strict";(self.webpackChunknew_nav_docusaurus_2_2=self.webpackChunknew_nav_docusaurus_2_2||[]).push([[88324],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(l,".").concat(f)]||d[f]||p[f]||i;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},89386:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const i={date:new Date("2023-03-26T00:00:00.000Z")},o="How do I find the most expensive queries in my ClickHouse platform?",s={permalink:"/docs/knowledgebase/find-expensive-queries",source:"@site/knowledgebase/find-expensive-queries.md",title:"How do I find the most expensive queries in my ClickHouse platform?",description:"The query_log table in the system database keeps track of all your queries, including:",date:"2023-03-26T00:00:00.000Z",formattedDate:"March 26, 2023",tags:[],readingTime:1.825,hasTruncateMarker:!1,authors:[],frontMatter:{date:"2023-03-26T00:00:00.000Z"},nextItem:{title:"DB::Exception: Cannot append data in format Parquet to file, because this format doesn't support appends. (CANNOT_APPEND_TO_FILE)",permalink:"/docs/knowledgebase/cannot-append-data-to-parquet-format"}},l={authorsImageUrls:[]},u=[],c={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"query_log")," table in the ",(0,a.kt)("inlineCode",{parentName:"p"},"system")," database keeps track of all your queries, including:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"how much memory the query consumed, and"),(0,a.kt)("li",{parentName:"ul"},"how much CPU time was needed")),(0,a.kt)("p",null,'The following query returns the top 10 queries, where "top" means the queries that used the most memory:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    type,\n    event_time,\n    initial_query_id,\n    formatReadableSize(memory_usage) AS memory,\n    ProfileEvents.Values[indexOf(ProfileEvents.Names, 'UserTimeMicroseconds')] AS userCPU,\n    ProfileEvents.Values[indexOf(ProfileEvents.Names, 'SystemTimeMicroseconds')] AS systemCPU,\n    normalizedQueryHash(query) AS normalized_query_hash\nFROM clusterAllReplicas(default, system.query_log)\nORDER BY memory_usage DESC\nLIMIT 10;\n")),(0,a.kt)("p",null,"The response looks like"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-response"},"\u250c\u2500type\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500event_time\u2500\u252c\u2500initial_query_id\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500memory\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500userCPU\u2500\u252c\u2500\u2500systemCPU\u2500\u252c\u2500normalized_query_hash\u2500\u2510\n\u2502 QueryFinish \u2502 2023-03-26 21:36:07 \u2502 7fc488a5-838f-410d-88ee-2f492825a26b \u2502 3.45 GiB   \u2502 28147128901 \u2502 8590897697 \u2502    178963678599600243 \u2502\n\u2502 QueryFinish \u2502 2023-03-26 21:36:04 \u2502 7fc488a5-838f-410d-88ee-2f492825a26b \u2502 1.18 GiB   \u2502 10194162387 \u2502 1183376457 \u2502   4121209451971717712 \u2502\n\u2502 QueryFinish \u2502 2023-03-26 21:36:06 \u2502 7fc488a5-838f-410d-88ee-2f492825a26b \u2502 1.16 GiB   \u2502 10516510952 \u2502 1484303318 \u2502   4121209451971717712 \u2502\n\u2502 QueryFinish \u2502 2023-03-26 21:35:59 \u2502 7fc488a5-838f-410d-88ee-2f492825a26b \u2502 1.14 GiB   \u2502 11484580963 \u2502 1464145099 \u2502   4121209451971717712 \u2502\n\u2502 QueryFinish \u2502 2023-03-26 21:47:01 \u2502 8119e682-a343-4847-96e7-d34ad8a748a1 \u2502 455.29 MiB \u2502   123340498 \u2502    8234304 \u2502  10687606311941357470 \u2502\n\u2502 QueryFinish \u2502 2023-03-26 22:07:05 \u2502 f2690e48-fe1e-4367-ae9d-435d962003a5 \u2502 377.94 MiB \u2502  2358130001 \u2502  668098391 \u2502   5988812223780974416 \u2502\n\u2502 QueryFinish \u2502 2023-03-26 20:45:42 \u2502 04618222-40a1-4299-8c3d-9f050a82d849 \u2502 18.48 MiB  \u2502       24676 \u2502      16620 \u2502   3205198713665290475 \u2502\n\u2502 QueryFinish \u2502 2023-03-26 22:14:37 \u2502 badf1097-5f8f-4486-88e9-3a5ac2e4734c \u2502 17.41 MiB  \u2502      186234 \u2502     148739 \u2502   1910846996890686559 \u2502\n\u2502 QueryFinish \u2502 2023-03-26 21:39:42 \u2502 8d373327-f566-4cd5-9f2c-cec75f534751 \u2502 16.19 MiB  \u2502       23169 \u2502      12365 \u2502   3205198713665290475 \u2502\n\u2502 QueryFinish \u2502 2023-03-26 21:35:42 \u2502 ea672dba-7c10-4dd4-b819-cad9dccbf5d0 \u2502 13.97 MiB  \u2502       20696 \u2502       8001 \u2502   3205198713665290475 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n")),(0,a.kt)("p",null,"You can use the query ID to extract more details about the query. Let's research our longest running query above (the first one):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT query\nFROM clusterAllReplicas(default, system.query_log)\nWHERE initial_query_id = '7fc488a5-838f-410d-88ee-2f492825a26b'\n")),(0,a.kt)("p",null,"It turns out to be the query we used to insert a few billion rows of data into a table named ",(0,a.kt)("inlineCode",{parentName:"p"},"youtube")," (see the ",(0,a.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/getting-started/example-datasets/youtube-dislikes"},"YouTube dislikes dataset"),"):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-response"},"INSERT INTO youtube\nSETTINGS input_format_null_as_default = 1\nSELECT\n    id,\n    parseDateTimeBestEffortUS(toString(fetch_date)) AS fetch_date,\n    upload_date,\n    ifNull(title, '') AS title,\n    uploader_id,\n    ifNull(uploader, '') AS uploader,\n    uploader_sub_count,\n    is_age_limit,\n    view_count,\n    like_count,\n    dislike_count,\n    is_crawlable,\n    has_subtitles,\n    is_ads_enabled,\n    is_comments_enabled,\n    ifNull(description, '') AS description,\n    rich_metadata,\n    super_titles,\n    ifNull(uploader_badges, '') AS uploader_badges,\n    ifNull(video_badges, '') AS video_badges\nFROM s3Cluster('default','https://clickhouse-public-datasets.s3.amazonaws.com/youtube/original/files/*.zst', 'JSONLines')\n")))}p.isMDXComponent=!0}}]);