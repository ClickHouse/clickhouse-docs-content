"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[42652,2184],{3905:(e,t,n)=>{n.d(t,{Zo:()=>f,kt:()=>d});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var a=r.createContext({}),c=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},f=function(e){var t=c(e.components);return r.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,a=e.parentName,f=o(e,["components","mdxType","originalType","parentName"]),p=c(n),d=i,m=p["".concat(a,".").concat(d)]||p[d]||u[d]||s;return n?r.createElement(m,l(l({ref:t},f),{},{components:n})):r.createElement(m,l({ref:t},f))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,l=new Array(s);l[0]=p;var o={};for(var a in t)hasOwnProperty.call(t,a)&&(o[a]=t[a]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var c=2;c<s;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},66802:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=n(87462),i=(n(67294),n(3905));const s={slug:"/en/sql-reference/functions/files",sidebar_position:43,sidebar_label:"Files",title:"Functions for Working with Files"},l=void 0,o={unversionedId:"en/sql-reference/functions/files",id:"en/sql-reference/functions/files",title:"Functions for Working with Files",description:"file",source:"@site/docs/en/sql-reference/functions/files.md",sourceDirName:"en/sql-reference/functions",slug:"/en/sql-reference/functions/files",permalink:"/docs/en/sql-reference/functions/files",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/sql-reference/functions/files.md",tags:[],version:"current",sidebarPosition:43,frontMatter:{slug:"/en/sql-reference/functions/files",sidebar_position:43,sidebar_label:"Files",title:"Functions for Working with Files"},sidebar:"english",previous:{title:"Conditional ",permalink:"/docs/en/sql-reference/functions/conditional-functions"},next:{title:"Mathematical",permalink:"/docs/en/sql-reference/functions/math-functions"}},a={},c=[{value:"file",id:"file",level:2}],f={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"file"},"file"),(0,i.kt)("p",null,"Reads file as a String. The file content is not parsed, so any information is read as one string and placed into the specified column."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Syntax")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"file(path[, default])\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"path")," \u2014 The relative path to the file from ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/operations/server-configuration-parameters/settings#server_configuration_parameters-user_files_path"},"user_files_path"),". Path to file support following wildcards: ",(0,i.kt)("inlineCode",{parentName:"li"},"*"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"?"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"{abc,def}")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"{N..M}")," where ",(0,i.kt)("inlineCode",{parentName:"li"},"N"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"M")," \u2014 numbers, ",(0,i.kt)("inlineCode",{parentName:"li"},"'abc', 'def'")," \u2014 strings."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"default")," \u2014 The value that will be returned in the case when a file does not exist or cannot be accessed. Data types supported: ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/data-types/string"},"String")," and ",(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/syntax#null-literal"},"NULL"),".")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("p",null,"Inserting data from files a.txt and b.txt into a table as strings:"),(0,i.kt)("p",null,"Query:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO table SELECT file('a.txt'), file('b.txt');\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"See Also")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/en/operations/server-configuration-parameters/settings#server_configuration_parameters-user_files_path"},"user_files_path")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/en/sql-reference/table-functions/file"},"file"))))}u.isMDXComponent=!0},17982:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>a,toc:()=>f});var r=n(87462),i=(n(67294),n(3905)),s=n(66802);const l={slug:"/zh/sql-reference/functions/files",sidebar_position:43,sidebar_label:"Files",title:"Functions for Working with Files"},o=void 0,a={unversionedId:"zh/sql-reference/functions/files",id:"zh/sql-reference/functions/files",title:"Functions for Working with Files",description:"",source:"@site/docs/zh/sql-reference/functions/files.mdx",sourceDirName:"zh/sql-reference/functions",slug:"/zh/sql-reference/functions/files",permalink:"/docs/zh/sql-reference/functions/files",draft:!1,editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/zh/sql-reference/functions/files.mdx",tags:[],version:"current",sidebarPosition:43,frontMatter:{slug:"/zh/sql-reference/functions/files",sidebar_position:43,sidebar_label:"Files",title:"Functions for Working with Files"},sidebar:"chinese",previous:{title:"\u7c7b\u578b\u8f6c\u6362\u51fd\u6570",permalink:"/docs/zh/sql-reference/functions/type-conversion-functions"},next:{title:"Working with maps",permalink:"/docs/zh/sql-reference/functions/tuple-map-functions"}},c={},f=[],u={toc:f};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(s.default,{mdxType:"Content"}))}p.isMDXComponent=!0}}]);