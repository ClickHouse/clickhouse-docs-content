"use strict";(self.webpackChunknew_nav_docusaurus_2_2=self.webpackChunknew_nav_docusaurus_2_2||[]).push([[21135],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),m=l,b=p["".concat(c,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(b,o(o({ref:t},u),{},{components:n})):a.createElement(b,o({ref:t},u))}));function b(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:l,o[1]=i;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},45654:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var a=n(87462),l=(n(67294),n(3905));const r={slug:"/en/cloud/bestpractices/avoid-nullable-columns",sidebar_label:"Avoid Nullable Columns",title:"Avoid Nullable Columns"},o=void 0,i={unversionedId:"en/cloud/bestpractices/avoidnullablecolumns",id:"en/cloud/bestpractices/avoidnullablecolumns",title:"Avoid Nullable Columns",description:"Nullable column (e.g. Nullable(String)) creates a separate column of UInt8 type. This additional column has to be processed every time a user works with a nullable column. This leads to additional storage space used and almost always negatively affects performance.",source:"@site/docs/en/cloud/bestpractices/avoidnullablecolumns.md",sourceDirName:"en/cloud/bestpractices",slug:"/en/cloud/bestpractices/avoid-nullable-columns",permalink:"/docs/en/cloud/bestpractices/avoid-nullable-columns",draft:!1,editUrl:"https://github.com/ClickHouse/clickhouse-docs/blob/main/docs/en/cloud/bestpractices/avoidnullablecolumns.md",tags:[],version:"current",frontMatter:{slug:"/en/cloud/bestpractices/avoid-nullable-columns",sidebar_label:"Avoid Nullable Columns",title:"Avoid Nullable Columns"},sidebar:"cloud",previous:{title:"Avoid Mutations",permalink:"/docs/en/cloud/bestpractices/avoid-mutations"},next:{title:"Avoid Optimize Final",permalink:"/docs/en/cloud/bestpractices/avoid-optimize-final"}},c={},s=[],u={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,l.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/docs/en/sql-reference/data-types/nullable/"},(0,l.kt)("inlineCode",{parentName:"a"},"Nullable")," column")," (e.g. ",(0,l.kt)("inlineCode",{parentName:"p"},"Nullable(String))")," creates a separate column of ",(0,l.kt)("inlineCode",{parentName:"p"},"UInt8")," type. This additional column has to be processed every time a user works with a nullable column. This leads to additional storage space used and almost always negatively affects performance."),(0,l.kt)("p",null,"To avoid ",(0,l.kt)("inlineCode",{parentName:"p"},"Nullable")," columns, consider setting a default value for that column.  For example, instead of:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE default.sample\n(\n    `x` Int8,\n    # highlight-next-line\n    `y` Nullable(Int8)\n)\nENGINE = MergeTree\nORDER BY x\n")),(0,l.kt)("p",null,"use"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE default.sample2\n(\n    `x` Int8,\n    # highlight-next-line\n    `y` Int8 DEFAULT 0\n)\nENGINE = MergeTree\nORDER BY x\n")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Consider your use case, a default value may be inappropriate.")))}d.isMDXComponent=!0}}]);