"use strict";(self.webpackChunknew_nav_docusaurus_2_2=self.webpackChunknew_nav_docusaurus_2_2||[]).push([[62044],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},79533:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={date:new Date("2023-03-24T00:00:00.000Z")},l="How can I do partitioned writes by year and month on S3?",i={permalink:"/docs/knowledgebase/s3_export_data_year_month_folders",source:"@site/knowledgebase/s3_export_data_year_month_folders.md",title:"How can I do partitioned writes by year and month on S3?",description:"I want to export data segregating the path in S3 bucket to follow a structure like:",date:"2023-03-24T00:00:00.000Z",formattedDate:"March 24, 2023",tags:[],readingTime:.81,hasTruncateMarker:!1,authors:[],frontMatter:{date:"2023-03-24T00:00:00.000Z"},prevItem:{title:"How to quickly recreate a small table across different terminals",permalink:"/docs/knowledgebase/recreate_table_across_terminals"},nextItem:{title:"How to check what code is currently running on a server?",permalink:"/docs/knowledgebase/which-processes-are-currently-running"}},s={authorsImageUrls:[]},c=[{value:"Answer",id:"answer",level:3}],u={toc:c},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"I want to export data segregating the path in S3 bucket to follow a structure like:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"2022",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"1"),(0,a.kt)("li",{parentName:"ul"},"2"),(0,a.kt)("li",{parentName:"ul"},"..."),(0,a.kt)("li",{parentName:"ul"},"12"))),(0,a.kt)("li",{parentName:"ul"},"2021",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"1"),(0,a.kt)("li",{parentName:"ul"},"2"),(0,a.kt)("li",{parentName:"ul"},"..."),(0,a.kt)("li",{parentName:"ul"},"12")))),(0,a.kt)("p",null,"and so on ..."),(0,a.kt)("h3",{id:"answer"},"Answer"),(0,a.kt)("p",null,"Considering the ClickHouse table:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE sample_data (\n    `name` String,\n    `age` Int,\n    `time` DateTime\n) ENGINE = MergeTree\nORDER BY\n    name\n")),(0,a.kt)("p",null,"Add 10000 entries:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO\n    sample_data\nSELECT\n    *\nFROM\n    generateRandom(\n        'name String, age Int, time DateTime',\n        10,\n        10,\n        10\n    )\nLIMIT\n    10000;\n")),(0,a.kt)("p",null,"Run this to create the desired structure in s3 bucket ",(0,a.kt)("inlineCode",{parentName:"p"},"my_bucket")," (note this example writes files in parquet format):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"NSERT INTO\n    FUNCTION s3(\n        'https://s3-host:4321/my_bucket/{_partition_id}/file.parquet',\n        's3-access-key',\n        's3-secret-access-key',\n        Parquet,\n        'name String, age Int, time DateTime',\n        'gzip'\n    ) PARTITION BY concat(\n        formatDateTime(time, '%Y'),\n        '/',\n        formatDateTime(time, '%m')\n    )\nSELECT\n    name,\n    age,\n    time\nFROM\n    sample_data\nQuery id: 55adcf22-f6af-491e-b697-d09694bbcc56\n\nOk.\n\n0 rows in set. Elapsed: 15.579 sec. Processed 10.00 thousand rows, 219.93 KB (641.87 rows/s., 14.12 KB/s.)\n")))}m.isMDXComponent=!0}}]);