"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[11800],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),f=s(n),d=a,u=f["".concat(p,".").concat(d)]||f[d]||c[d]||i;return n?r.createElement(u,l(l({ref:t},m),{},{components:n})):r.createElement(u,l({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=f;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1737:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),l=["components"],o={},p="part_log",s={unversionedId:"en/reference/operations/system-tables/part_log",id:"en/reference/operations/system-tables/part_log",title:"part_log",description:"system_tables-part-log}",source:"@site/docs/en/reference/operations/system-tables/part_log.md",sourceDirName:"en/reference/operations/system-tables",slug:"/en/reference/operations/system-tables/part_log",permalink:"/en/reference/operations/system-tables/part_log",editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/reference/operations/system-tables/part_log.md",tags:[],version:"current",frontMatter:{},sidebar:"english",previous:{title:"opentelemetry_span_log",permalink:"/en/reference/operations/system-tables/opentelemetry_span_log"},next:{title:"parts",permalink:"/en/reference/operations/system-tables/parts"}},m={},c=[],f={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"system_tables-part-log"},"part_log"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"system.part_log")," table is created only if the ",(0,i.kt)("a",{parentName:"p",href:"/en/reference/operations/server-configuration-parameters/settings#server_configuration_parameters-part-log"},"part_log")," server setting is specified."),(0,i.kt)("p",null,"This table contains information about events that occurred with ",(0,i.kt)("a",{parentName:"p",href:"/en/reference/engines/table-engines/mergetree-family/custom-partitioning-key"},"data parts")," in the ",(0,i.kt)("a",{parentName:"p",href:"/en/reference/engines/table-engines/mergetree-family/mergetree"},"MergeTree")," family tables, such as adding or merging data."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"system.part_log")," table contains the following columns:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"query_id")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/string"},"String"),") \u2014 Identifier of the ",(0,i.kt)("inlineCode",{parentName:"li"},"INSERT")," query that created this data part."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"event_type")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/enum"},"Enum8"),") \u2014 Type of the event that occurred with the data part. Can have one of the following values:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"NEW_PART")," \u2014 Inserting of a new data part."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MERGE_PARTS")," \u2014 Merging of data parts."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"DOWNLOAD_PART")," \u2014 Downloading a data part."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"REMOVE_PART")," \u2014 Removing or detaching a data part using ",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/statements/alter/partition#alter_detach-partition"},"DETACH PARTITION"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MUTATE_PART")," \u2014 Mutating of a data part."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"MOVE_PART")," \u2014 Moving the data part from the one disk to another one."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"event_date")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/date"},"Date"),") \u2014 Event date."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"event_time")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/datetime"},"DateTime"),") \u2014 Event time."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"event_time_microseconds")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/datetime64"},"DateTime64"),") \u2014 Event time with microseconds precision."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"duration_ms")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 Duration."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"database")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/string"},"String"),") \u2014 Name of the database the data part is in."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"table")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/string"},"String"),") \u2014 Name of the table the data part is in."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"part_name")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/string"},"String"),") \u2014 Name of the data part."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"partition_id")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/string"},"String"),") \u2014 ID of the partition that the data part was inserted to. The column takes the ",(0,i.kt)("inlineCode",{parentName:"li"},"all")," value if the partitioning is by ",(0,i.kt)("inlineCode",{parentName:"li"},"tuple()"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"path_on_disk")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/string"},"String"),") \u2014 Absolute path to the folder with data part files."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rows")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 The number of rows in the data part."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"size_in_bytes")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 Size of the data part in bytes."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"merged_from")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/array"},"Array(String)"),") \u2014 An array of names of the parts which the current part was made up from (after the merge)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bytes_uncompressed")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 Size of uncompressed bytes."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"read_rows")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 The number of rows was read during the merge."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"read_bytes")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/int-uint"},"UInt64"),") \u2014 The number of bytes was read during the merge."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"peak_memory_usage")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/int-uint"},"Int64"),") \u2014 The maximum difference between the amount of allocated and freed memory in context of this thread."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"error")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/int-uint"},"UInt16"),") \u2014 The code number of the occurred error."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"exception")," (",(0,i.kt)("a",{parentName:"li",href:"/en/reference/sql-reference/data-types/string"},"String"),") \u2014 Text message of the occurred error.")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"system.part_log")," table is created after the first inserting data to the ",(0,i.kt)("inlineCode",{parentName:"p"},"MergeTree")," table."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM system.part_log LIMIT 1 FORMAT Vertical;\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"Row 1:\n\u2500\u2500\u2500\u2500\u2500\u2500\nquery_id:                      983ad9c7-28d5-4ae1-844e-603116b7de31\nevent_type:                    NewPart\nevent_date:                    2021-02-02\nevent_time:                    2021-02-02 11:14:28\nevent_time_microseconds:                    2021-02-02 11:14:28.861919\nduration_ms:                   35\ndatabase:                      default\ntable:                         log_mt_2\npart_name:                     all_1_1_0\npartition_id:                  all\npath_on_disk:                  db/data/default/log_mt_2/all_1_1_0/\nrows:                          115418\nsize_in_bytes:                 1074311\nmerged_from:                   []\nbytes_uncompressed:            0\nread_rows:                     0\nread_bytes:                    0\npeak_memory_usage:             0\nerror:                         0\nexception:\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/operations/system-tables/part_log"},"Original article")," "))}d.isMDXComponent=!0}}]);