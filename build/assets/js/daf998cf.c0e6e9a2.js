"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[12202],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return d}});var n=t(67294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=n.createContext({}),u=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(c.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=u(t),d=i,m=f["".concat(c,".").concat(d)]||f[d]||s[d]||o;return t?n.createElement(m,a(a({ref:r},p),{},{components:t})):n.createElement(m,a({ref:r},p))}));function d(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=f;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=t[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},40615:function(e,r,t){t.r(r),t.d(r,{assets:function(){return p},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return s}});var n=t(87462),i=t(63366),o=(t(67294),t(3905)),a=["components"],l={sidebar_position:29,sidebar_label:"Proxies"},c="Proxy Servers from Third-party Developers",u={unversionedId:"en/reference/interfaces/third-party/proxy",id:"en/reference/interfaces/third-party/proxy",title:"Proxy Servers from Third-party Developers",description:"proxy-servers-from-third-party-developers}",source:"@site/docs/en/reference/interfaces/third-party/proxy.md",sourceDirName:"en/reference/interfaces/third-party",slug:"/en/reference/interfaces/third-party/proxy",permalink:"/en/reference/interfaces/third-party/proxy",editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/reference/interfaces/third-party/proxy.md",tags:[],version:"current",sidebarPosition:29,frontMatter:{sidebar_position:29,sidebar_label:"Proxies"},sidebar:"english",previous:{title:"Visual Interfaces",permalink:"/en/reference/interfaces/third-party/gui"},next:{title:"Operations",permalink:"/en/reference/operations/"}},p={},s=[{value:"chproxy",id:"chproxy",level:2},{value:"KittenHouse",id:"kittenhouse",level:2},{value:"ClickHouse-Bulk",id:"clickhouse-bulk",level:2}],f={toc:s};function d(e){var r=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,n.Z)({},f,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"proxy-servers-from-third-party-developers"},"Proxy Servers from Third-party Developers"),(0,o.kt)("h2",{id:"chproxy"},"chproxy"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/Vertamedia/chproxy"},"chproxy"),", is an HTTP proxy and load balancer for ClickHouse database."),(0,o.kt)("p",null,"Features:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Per-user routing and response caching."),(0,o.kt)("li",{parentName:"ul"},"Flexible limits."),(0,o.kt)("li",{parentName:"ul"},"Automatic SSL certificate renewal.")),(0,o.kt)("p",null,"Implemented in Go."),(0,o.kt)("h2",{id:"kittenhouse"},"KittenHouse"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/VKCOM/kittenhouse"},"KittenHouse")," is designed to be a local proxy between ClickHouse and application server in case it\u2019s impossible or inconvenient to buffer INSERT data on your application side."),(0,o.kt)("p",null,"Features:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"In-memory and on-disk data buffering."),(0,o.kt)("li",{parentName:"ul"},"Per-table routing."),(0,o.kt)("li",{parentName:"ul"},"Load-balancing and health checking.")),(0,o.kt)("p",null,"Implemented in Go."),(0,o.kt)("h2",{id:"clickhouse-bulk"},"ClickHouse-Bulk"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/nikepan/clickhouse-bulk"},"ClickHouse-Bulk")," is a simple ClickHouse insert collector."),(0,o.kt)("p",null,"Features:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Group requests and send by threshold or interval."),(0,o.kt)("li",{parentName:"ul"},"Multiple remote servers."),(0,o.kt)("li",{parentName:"ul"},"Basic authentication.")),(0,o.kt)("p",null,"Implemented in Go."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://clickhouse.com/docs/en/interfaces/third-party/proxy/"},"Original article")," "))}d.isMDXComponent=!0}}]);