"use strict";(self.webpackChunkclickhouse=self.webpackChunkclickhouse||[]).push([[5537],{3905:function(e,r,n){n.d(r,{Zo:function(){return l},kt:function(){return m}});var t=n(67294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function c(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=t.createContext({}),f=function(e){var r=t.useContext(u),n=r;return e&&(n="function"==typeof e?e(r):c(c({},r),e)),n},l=function(e){var r=f(e.components);return t.createElement(u.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=f(n),m=a,g=p["".concat(u,".").concat(m)]||p[m]||s[m]||o;return n?t.createElement(g,c(c({ref:r},l),{},{components:n})):t.createElement(g,c({ref:r},l))}));function m(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=p;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var f=2;f<o;f++)c[f]=n[f];return t.createElement.apply(null,c)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},99761:function(e,r,n){n.r(r),n.d(r,{assets:function(){return l},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return i},metadata:function(){return f},toc:function(){return s}});var t=n(87462),a=n(63366),o=(n(67294),n(3905)),c=["components"],i={sidebar_position:3},u="max",f={unversionedId:"en/reference/sql-reference/aggregate-functions/reference/max",id:"en/reference/sql-reference/aggregate-functions/reference/max",title:"max",description:"agg_function-max}",source:"@site/docs/en/reference/sql-reference/aggregate-functions/reference/max.md",sourceDirName:"en/reference/sql-reference/aggregate-functions/reference",slug:"/en/reference/sql-reference/aggregate-functions/reference/max",permalink:"/en/reference/sql-reference/aggregate-functions/reference/max",editUrl:"https://github.com/ClickHouse/ClickHouse/tree/master/docs/en/reference/sql-reference/aggregate-functions/reference/max.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"english",previous:{title:"min",permalink:"/en/reference/sql-reference/aggregate-functions/reference/min"},next:{title:"sum",permalink:"/en/reference/sql-reference/aggregate-functions/reference/sum"}},l={},s=[],p={toc:s};function m(e){var r=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"agg_function-max"},"max"),(0,o.kt)("p",null,"Aggregate function that calculates the maximum across a group of values."),(0,o.kt)("p",null,"Example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"SELECT max(salary) FROM employees;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"SELECT department, max(salary) FROM employees GROUP BY department;\n")),(0,o.kt)("p",null,"If you need non-aggregate function to choose a maximum of two values, see ",(0,o.kt)("inlineCode",{parentName:"p"},"greatest"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"SELECT greatest(a, b) FROM table;\n")))}m.isMDXComponent=!0}}]);